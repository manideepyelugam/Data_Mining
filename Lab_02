{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "k9i0svUDDk5N"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df=pd.read_csv('heart.csv')"
      ],
      "metadata": {
        "id": "77j9zOA_D8g0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aXrctHgyEDDm",
        "outputId": "3f7ae596-a4cc-4db5-e06b-d4dfafbc6586"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     age  sex  cp  trestbps  chol  fbs  restecg  thalach  exang  oldpeak  \\\n",
            "0     63    1   3       145   233    1        0      150      0      2.3   \n",
            "1     37    1   2       130   250    0        1      187      0      3.5   \n",
            "2     41    0   1       130   204    0        0      172      0      1.4   \n",
            "3     56    1   1       120   236    0        1      178      0      0.8   \n",
            "4     57    0   0       120   354    0        1      163      1      0.6   \n",
            "..   ...  ...  ..       ...   ...  ...      ...      ...    ...      ...   \n",
            "298   57    0   0       140   241    0        1      123      1      0.2   \n",
            "299   45    1   3       110   264    0        1      132      0      1.2   \n",
            "300   68    1   0       144   193    1        1      141      0      3.4   \n",
            "301   57    1   0       130   131    0        1      115      1      1.2   \n",
            "302   57    0   1       130   236    0        0      174      0      0.0   \n",
            "\n",
            "     slope  ca  thal  target  \n",
            "0        0   0     1       1  \n",
            "1        0   0     2       1  \n",
            "2        2   0     2       1  \n",
            "3        2   0     2       1  \n",
            "4        2   0     2       1  \n",
            "..     ...  ..   ...     ...  \n",
            "298      1   0     3       0  \n",
            "299      1   0     3       0  \n",
            "300      1   2     3       0  \n",
            "301      1   1     3       0  \n",
            "302      1   1     2       0  \n",
            "\n",
            "[303 rows x 14 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 320
        },
        "id": "mqZ9K3ElEJsR",
        "outputId": "428437e4-eefe-4a46-d708-e0cffc0517fe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              age         sex          cp    trestbps        chol         fbs  \\\n",
              "count  303.000000  303.000000  303.000000  303.000000  303.000000  303.000000   \n",
              "mean    54.366337    0.683168    0.966997  131.623762  246.264026    0.148515   \n",
              "std      9.082101    0.466011    1.032052   17.538143   51.830751    0.356198   \n",
              "min     29.000000    0.000000    0.000000   94.000000  126.000000    0.000000   \n",
              "25%     47.500000    0.000000    0.000000  120.000000  211.000000    0.000000   \n",
              "50%     55.000000    1.000000    1.000000  130.000000  240.000000    0.000000   \n",
              "75%     61.000000    1.000000    2.000000  140.000000  274.500000    0.000000   \n",
              "max     77.000000    1.000000    3.000000  200.000000  564.000000    1.000000   \n",
              "\n",
              "          restecg     thalach       exang     oldpeak       slope          ca  \\\n",
              "count  303.000000  303.000000  303.000000  303.000000  303.000000  303.000000   \n",
              "mean     0.528053  149.646865    0.326733    1.039604    1.399340    0.729373   \n",
              "std      0.525860   22.905161    0.469794    1.161075    0.616226    1.022606   \n",
              "min      0.000000   71.000000    0.000000    0.000000    0.000000    0.000000   \n",
              "25%      0.000000  133.500000    0.000000    0.000000    1.000000    0.000000   \n",
              "50%      1.000000  153.000000    0.000000    0.800000    1.000000    0.000000   \n",
              "75%      1.000000  166.000000    1.000000    1.600000    2.000000    1.000000   \n",
              "max      2.000000  202.000000    1.000000    6.200000    2.000000    4.000000   \n",
              "\n",
              "             thal      target  \n",
              "count  303.000000  303.000000  \n",
              "mean     2.313531    0.544554  \n",
              "std      0.612277    0.498835  \n",
              "min      0.000000    0.000000  \n",
              "25%      2.000000    0.000000  \n",
              "50%      2.000000    1.000000  \n",
              "75%      3.000000    1.000000  \n",
              "max      3.000000    1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2f2e2ef5-f3e9-4f4e-a67c-5404d87644ee\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>sex</th>\n",
              "      <th>cp</th>\n",
              "      <th>trestbps</th>\n",
              "      <th>chol</th>\n",
              "      <th>fbs</th>\n",
              "      <th>restecg</th>\n",
              "      <th>thalach</th>\n",
              "      <th>exang</th>\n",
              "      <th>oldpeak</th>\n",
              "      <th>slope</th>\n",
              "      <th>ca</th>\n",
              "      <th>thal</th>\n",
              "      <th>target</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>303.000000</td>\n",
              "      <td>303.000000</td>\n",
              "      <td>303.000000</td>\n",
              "      <td>303.000000</td>\n",
              "      <td>303.000000</td>\n",
              "      <td>303.000000</td>\n",
              "      <td>303.000000</td>\n",
              "      <td>303.000000</td>\n",
              "      <td>303.000000</td>\n",
              "      <td>303.000000</td>\n",
              "      <td>303.000000</td>\n",
              "      <td>303.000000</td>\n",
              "      <td>303.000000</td>\n",
              "      <td>303.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>54.366337</td>\n",
              "      <td>0.683168</td>\n",
              "      <td>0.966997</td>\n",
              "      <td>131.623762</td>\n",
              "      <td>246.264026</td>\n",
              "      <td>0.148515</td>\n",
              "      <td>0.528053</td>\n",
              "      <td>149.646865</td>\n",
              "      <td>0.326733</td>\n",
              "      <td>1.039604</td>\n",
              "      <td>1.399340</td>\n",
              "      <td>0.729373</td>\n",
              "      <td>2.313531</td>\n",
              "      <td>0.544554</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>9.082101</td>\n",
              "      <td>0.466011</td>\n",
              "      <td>1.032052</td>\n",
              "      <td>17.538143</td>\n",
              "      <td>51.830751</td>\n",
              "      <td>0.356198</td>\n",
              "      <td>0.525860</td>\n",
              "      <td>22.905161</td>\n",
              "      <td>0.469794</td>\n",
              "      <td>1.161075</td>\n",
              "      <td>0.616226</td>\n",
              "      <td>1.022606</td>\n",
              "      <td>0.612277</td>\n",
              "      <td>0.498835</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>29.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>94.000000</td>\n",
              "      <td>126.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>71.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>47.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>120.000000</td>\n",
              "      <td>211.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>133.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>55.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>130.000000</td>\n",
              "      <td>240.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>153.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.800000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>61.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>140.000000</td>\n",
              "      <td>274.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>166.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.600000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>77.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>200.000000</td>\n",
              "      <td>564.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>202.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>6.200000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2f2e2ef5-f3e9-4f4e-a67c-5404d87644ee')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2f2e2ef5-f3e9-4f4e-a67c-5404d87644ee button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2f2e2ef5-f3e9-4f4e-a67c-5404d87644ee');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1edaa4da-e531-4e08-88ce-59b1199101b4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1edaa4da-e531-4e08-88ce-59b1199101b4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1edaa4da-e531-4e08-88ce-59b1199101b4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 92.63263171018463,\n        \"min\": 9.082100989837858,\n        \"max\": 303.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          54.366336633663366,\n          55.0,\n          303.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106.91793021099771,\n        \"min\": 0.0,\n        \"max\": 303.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.6831683168316832,\n          1.0,\n          0.4660108233396251\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106.72725528212328,\n        \"min\": 0.0,\n        \"max\": 303.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          303.0,\n          0.966996699669967,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"trestbps\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 82.65195263865037,\n        \"min\": 17.53814281351709,\n        \"max\": 303.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          131.62376237623764,\n          130.0,\n          303.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"chol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 150.3580656885174,\n        \"min\": 51.830750987930045,\n        \"max\": 564.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          246.26402640264027,\n          240.0,\n          303.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fbs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 107.05122867414781,\n        \"min\": 0.0,\n        \"max\": 303.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.1485148514851485,\n          1.0,\n          0.35619787492797594\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"restecg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106.87335880098969,\n        \"min\": 0.0,\n        \"max\": 303.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          303.0,\n          0.528052805280528,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thalach\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 83.70384393886216,\n        \"min\": 22.905161114914087,\n        \"max\": 303.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          149.64686468646866,\n          153.0,\n          303.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"exang\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106.98623940881839,\n        \"min\": 0.0,\n        \"max\": 303.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.32673267326732675,\n          1.0,\n          0.46979446452231716\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oldpeak\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106.59952466080658,\n        \"min\": 0.0,\n        \"max\": 303.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          303.0,\n          1.0396039603960396,\n          1.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"slope\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106.72394469173837,\n        \"min\": 0.0,\n        \"max\": 303.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          303.0,\n          1.3993399339933994,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ca\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106.79372080487734,\n        \"min\": 0.0,\n        \"max\": 303.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          303.0,\n          0.7293729372937293,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106.47909774814387,\n        \"min\": 0.0,\n        \"max\": 303.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          303.0,\n          2.3135313531353137,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106.92326354929803,\n        \"min\": 0.0,\n        \"max\": 303.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.5445544554455446,\n          1.0,\n          0.4988347841643926\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "t3r-PUHiIWVu",
        "outputId": "47954a09-c06c-48e6-bbf4-f98396884e1f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 303 entries, 0 to 302\n",
            "Data columns (total 14 columns):\n",
            " #   Column    Non-Null Count  Dtype  \n",
            "---  ------    --------------  -----  \n",
            " 0   age       303 non-null    int64  \n",
            " 1   sex       303 non-null    int64  \n",
            " 2   cp        303 non-null    int64  \n",
            " 3   trestbps  303 non-null    int64  \n",
            " 4   chol      303 non-null    int64  \n",
            " 5   fbs       303 non-null    int64  \n",
            " 6   restecg   303 non-null    int64  \n",
            " 7   thalach   303 non-null    int64  \n",
            " 8   exang     303 non-null    int64  \n",
            " 9   oldpeak   303 non-null    float64\n",
            " 10  slope     303 non-null    int64  \n",
            " 11  ca        303 non-null    int64  \n",
            " 12  thal      303 non-null    int64  \n",
            " 13  target    303 non-null    int64  \n",
            "dtypes: float64(1), int64(13)\n",
            "memory usage: 33.3 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head(3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "Z3u-2ZBZIcme",
        "outputId": "3a7f68bf-aa39-4f7c-d300-e38c72460c6c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   age  sex  cp  trestbps  chol  fbs  restecg  thalach  exang  oldpeak  slope  \\\n",
              "0   63    1   3       145   233    1        0      150      0      2.3      0   \n",
              "1   37    1   2       130   250    0        1      187      0      3.5      0   \n",
              "2   41    0   1       130   204    0        0      172      0      1.4      2   \n",
              "\n",
              "   ca  thal  target  \n",
              "0   0     1       1  \n",
              "1   0     2       1  \n",
              "2   0     2       1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e432f291-7245-40a9-9a6b-b6c6f117cc3d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>sex</th>\n",
              "      <th>cp</th>\n",
              "      <th>trestbps</th>\n",
              "      <th>chol</th>\n",
              "      <th>fbs</th>\n",
              "      <th>restecg</th>\n",
              "      <th>thalach</th>\n",
              "      <th>exang</th>\n",
              "      <th>oldpeak</th>\n",
              "      <th>slope</th>\n",
              "      <th>ca</th>\n",
              "      <th>thal</th>\n",
              "      <th>target</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>63</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>145</td>\n",
              "      <td>233</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "      <td>2.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>37</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>130</td>\n",
              "      <td>250</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>187</td>\n",
              "      <td>0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>41</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>130</td>\n",
              "      <td>204</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>172</td>\n",
              "      <td>0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e432f291-7245-40a9-9a6b-b6c6f117cc3d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e432f291-7245-40a9-9a6b-b6c6f117cc3d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e432f291-7245-40a9-9a6b-b6c6f117cc3d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9e0de80e-0e1e-40c5-8dff-b106b398105b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9e0de80e-0e1e-40c5-8dff-b106b398105b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9e0de80e-0e1e-40c5-8dff-b106b398105b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 303,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 29,\n        \"max\": 77,\n        \"num_unique_values\": 41,\n        \"samples\": [\n          46,\n          66,\n          48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"trestbps\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17,\n        \"min\": 94,\n        \"max\": 200,\n        \"num_unique_values\": 49,\n        \"samples\": [\n          104,\n          123\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"chol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 51,\n        \"min\": 126,\n        \"max\": 564,\n        \"num_unique_values\": 152,\n        \"samples\": [\n          277,\n          169\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fbs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"restecg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thalach\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22,\n        \"min\": 71,\n        \"max\": 202,\n        \"num_unique_values\": 91,\n        \"samples\": [\n          159,\n          152\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"exang\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oldpeak\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1610750220686343,\n        \"min\": 0.0,\n        \"max\": 6.2,\n        \"num_unique_values\": 40,\n        \"samples\": [\n          1.9,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"slope\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ca\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "9x02DtV3GZkg",
        "outputId": "e2d175f6-0149-4bdc-ce58-e1befd2cc2ce"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   age  sex  cp  trestbps  chol  fbs  restecg  thalach  exang  oldpeak  slope  \\\n",
              "0   63    1   3       145   233    1        0      150      0      2.3      0   \n",
              "1   37    1   2       130   250    0        1      187      0      3.5      0   \n",
              "2   41    0   1       130   204    0        0      172      0      1.4      2   \n",
              "3   56    1   1       120   236    0        1      178      0      0.8      2   \n",
              "4   57    0   0       120   354    0        1      163      1      0.6      2   \n",
              "\n",
              "   ca  thal  target  \n",
              "0   0     1       1  \n",
              "1   0     2       1  \n",
              "2   0     2       1  \n",
              "3   0     2       1  \n",
              "4   0     2       1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-978d0164-7a5d-45c6-ac5c-364bc62542cd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>sex</th>\n",
              "      <th>cp</th>\n",
              "      <th>trestbps</th>\n",
              "      <th>chol</th>\n",
              "      <th>fbs</th>\n",
              "      <th>restecg</th>\n",
              "      <th>thalach</th>\n",
              "      <th>exang</th>\n",
              "      <th>oldpeak</th>\n",
              "      <th>slope</th>\n",
              "      <th>ca</th>\n",
              "      <th>thal</th>\n",
              "      <th>target</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>63</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>145</td>\n",
              "      <td>233</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>150</td>\n",
              "      <td>0</td>\n",
              "      <td>2.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>37</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>130</td>\n",
              "      <td>250</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>187</td>\n",
              "      <td>0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>41</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>130</td>\n",
              "      <td>204</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>172</td>\n",
              "      <td>0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>56</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>120</td>\n",
              "      <td>236</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>178</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>57</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>120</td>\n",
              "      <td>354</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>163</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-978d0164-7a5d-45c6-ac5c-364bc62542cd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-978d0164-7a5d-45c6-ac5c-364bc62542cd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-978d0164-7a5d-45c6-ac5c-364bc62542cd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-149aa58c-0f46-4e51-8e35-bef3a5e2cd77\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-149aa58c-0f46-4e51-8e35-bef3a5e2cd77')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-149aa58c-0f46-4e51-8e35-bef3a5e2cd77 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 303,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 29,\n        \"max\": 77,\n        \"num_unique_values\": 41,\n        \"samples\": [\n          46,\n          66,\n          48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"trestbps\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17,\n        \"min\": 94,\n        \"max\": 200,\n        \"num_unique_values\": 49,\n        \"samples\": [\n          104,\n          123\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"chol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 51,\n        \"min\": 126,\n        \"max\": 564,\n        \"num_unique_values\": 152,\n        \"samples\": [\n          277,\n          169\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fbs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"restecg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thalach\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22,\n        \"min\": 71,\n        \"max\": 202,\n        \"num_unique_values\": 91,\n        \"samples\": [\n          159,\n          152\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"exang\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oldpeak\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1610750220686343,\n        \"min\": 0.0,\n        \"max\": 6.2,\n        \"num_unique_values\": 40,\n        \"samples\": [\n          1.9,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"slope\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ca\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.corr()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 508
        },
        "id": "slMT23hjG0Zs",
        "outputId": "a8325da0-3cf6-4ea1-81ba-3eca0a7bd83a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               age       sex        cp  trestbps      chol       fbs  \\\n",
              "age       1.000000 -0.098447 -0.068653  0.279351  0.213678  0.121308   \n",
              "sex      -0.098447  1.000000 -0.049353 -0.056769 -0.197912  0.045032   \n",
              "cp       -0.068653 -0.049353  1.000000  0.047608 -0.076904  0.094444   \n",
              "trestbps  0.279351 -0.056769  0.047608  1.000000  0.123174  0.177531   \n",
              "chol      0.213678 -0.197912 -0.076904  0.123174  1.000000  0.013294   \n",
              "fbs       0.121308  0.045032  0.094444  0.177531  0.013294  1.000000   \n",
              "restecg  -0.116211 -0.058196  0.044421 -0.114103 -0.151040 -0.084189   \n",
              "thalach  -0.398522 -0.044020  0.295762 -0.046698 -0.009940 -0.008567   \n",
              "exang     0.096801  0.141664 -0.394280  0.067616  0.067023  0.025665   \n",
              "oldpeak   0.210013  0.096093 -0.149230  0.193216  0.053952  0.005747   \n",
              "slope    -0.168814 -0.030711  0.119717 -0.121475 -0.004038 -0.059894   \n",
              "ca        0.276326  0.118261 -0.181053  0.101389  0.070511  0.137979   \n",
              "thal      0.068001  0.210041 -0.161736  0.062210  0.098803 -0.032019   \n",
              "target   -0.225439 -0.280937  0.433798 -0.144931 -0.085239 -0.028046   \n",
              "\n",
              "           restecg   thalach     exang   oldpeak     slope        ca  \\\n",
              "age      -0.116211 -0.398522  0.096801  0.210013 -0.168814  0.276326   \n",
              "sex      -0.058196 -0.044020  0.141664  0.096093 -0.030711  0.118261   \n",
              "cp        0.044421  0.295762 -0.394280 -0.149230  0.119717 -0.181053   \n",
              "trestbps -0.114103 -0.046698  0.067616  0.193216 -0.121475  0.101389   \n",
              "chol     -0.151040 -0.009940  0.067023  0.053952 -0.004038  0.070511   \n",
              "fbs      -0.084189 -0.008567  0.025665  0.005747 -0.059894  0.137979   \n",
              "restecg   1.000000  0.044123 -0.070733 -0.058770  0.093045 -0.072042   \n",
              "thalach   0.044123  1.000000 -0.378812 -0.344187  0.386784 -0.213177   \n",
              "exang    -0.070733 -0.378812  1.000000  0.288223 -0.257748  0.115739   \n",
              "oldpeak  -0.058770 -0.344187  0.288223  1.000000 -0.577537  0.222682   \n",
              "slope     0.093045  0.386784 -0.257748 -0.577537  1.000000 -0.080155   \n",
              "ca       -0.072042 -0.213177  0.115739  0.222682 -0.080155  1.000000   \n",
              "thal     -0.011981 -0.096439  0.206754  0.210244 -0.104764  0.151832   \n",
              "target    0.137230  0.421741 -0.436757 -0.430696  0.345877 -0.391724   \n",
              "\n",
              "              thal    target  \n",
              "age       0.068001 -0.225439  \n",
              "sex       0.210041 -0.280937  \n",
              "cp       -0.161736  0.433798  \n",
              "trestbps  0.062210 -0.144931  \n",
              "chol      0.098803 -0.085239  \n",
              "fbs      -0.032019 -0.028046  \n",
              "restecg  -0.011981  0.137230  \n",
              "thalach  -0.096439  0.421741  \n",
              "exang     0.206754 -0.436757  \n",
              "oldpeak   0.210244 -0.430696  \n",
              "slope    -0.104764  0.345877  \n",
              "ca        0.151832 -0.391724  \n",
              "thal      1.000000 -0.344029  \n",
              "target   -0.344029  1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d83b9ffd-6df5-462f-bf90-72f3d652e31c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>sex</th>\n",
              "      <th>cp</th>\n",
              "      <th>trestbps</th>\n",
              "      <th>chol</th>\n",
              "      <th>fbs</th>\n",
              "      <th>restecg</th>\n",
              "      <th>thalach</th>\n",
              "      <th>exang</th>\n",
              "      <th>oldpeak</th>\n",
              "      <th>slope</th>\n",
              "      <th>ca</th>\n",
              "      <th>thal</th>\n",
              "      <th>target</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>age</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.098447</td>\n",
              "      <td>-0.068653</td>\n",
              "      <td>0.279351</td>\n",
              "      <td>0.213678</td>\n",
              "      <td>0.121308</td>\n",
              "      <td>-0.116211</td>\n",
              "      <td>-0.398522</td>\n",
              "      <td>0.096801</td>\n",
              "      <td>0.210013</td>\n",
              "      <td>-0.168814</td>\n",
              "      <td>0.276326</td>\n",
              "      <td>0.068001</td>\n",
              "      <td>-0.225439</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sex</th>\n",
              "      <td>-0.098447</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.049353</td>\n",
              "      <td>-0.056769</td>\n",
              "      <td>-0.197912</td>\n",
              "      <td>0.045032</td>\n",
              "      <td>-0.058196</td>\n",
              "      <td>-0.044020</td>\n",
              "      <td>0.141664</td>\n",
              "      <td>0.096093</td>\n",
              "      <td>-0.030711</td>\n",
              "      <td>0.118261</td>\n",
              "      <td>0.210041</td>\n",
              "      <td>-0.280937</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>cp</th>\n",
              "      <td>-0.068653</td>\n",
              "      <td>-0.049353</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.047608</td>\n",
              "      <td>-0.076904</td>\n",
              "      <td>0.094444</td>\n",
              "      <td>0.044421</td>\n",
              "      <td>0.295762</td>\n",
              "      <td>-0.394280</td>\n",
              "      <td>-0.149230</td>\n",
              "      <td>0.119717</td>\n",
              "      <td>-0.181053</td>\n",
              "      <td>-0.161736</td>\n",
              "      <td>0.433798</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>trestbps</th>\n",
              "      <td>0.279351</td>\n",
              "      <td>-0.056769</td>\n",
              "      <td>0.047608</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.123174</td>\n",
              "      <td>0.177531</td>\n",
              "      <td>-0.114103</td>\n",
              "      <td>-0.046698</td>\n",
              "      <td>0.067616</td>\n",
              "      <td>0.193216</td>\n",
              "      <td>-0.121475</td>\n",
              "      <td>0.101389</td>\n",
              "      <td>0.062210</td>\n",
              "      <td>-0.144931</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>chol</th>\n",
              "      <td>0.213678</td>\n",
              "      <td>-0.197912</td>\n",
              "      <td>-0.076904</td>\n",
              "      <td>0.123174</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.013294</td>\n",
              "      <td>-0.151040</td>\n",
              "      <td>-0.009940</td>\n",
              "      <td>0.067023</td>\n",
              "      <td>0.053952</td>\n",
              "      <td>-0.004038</td>\n",
              "      <td>0.070511</td>\n",
              "      <td>0.098803</td>\n",
              "      <td>-0.085239</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>fbs</th>\n",
              "      <td>0.121308</td>\n",
              "      <td>0.045032</td>\n",
              "      <td>0.094444</td>\n",
              "      <td>0.177531</td>\n",
              "      <td>0.013294</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.084189</td>\n",
              "      <td>-0.008567</td>\n",
              "      <td>0.025665</td>\n",
              "      <td>0.005747</td>\n",
              "      <td>-0.059894</td>\n",
              "      <td>0.137979</td>\n",
              "      <td>-0.032019</td>\n",
              "      <td>-0.028046</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>restecg</th>\n",
              "      <td>-0.116211</td>\n",
              "      <td>-0.058196</td>\n",
              "      <td>0.044421</td>\n",
              "      <td>-0.114103</td>\n",
              "      <td>-0.151040</td>\n",
              "      <td>-0.084189</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.044123</td>\n",
              "      <td>-0.070733</td>\n",
              "      <td>-0.058770</td>\n",
              "      <td>0.093045</td>\n",
              "      <td>-0.072042</td>\n",
              "      <td>-0.011981</td>\n",
              "      <td>0.137230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>thalach</th>\n",
              "      <td>-0.398522</td>\n",
              "      <td>-0.044020</td>\n",
              "      <td>0.295762</td>\n",
              "      <td>-0.046698</td>\n",
              "      <td>-0.009940</td>\n",
              "      <td>-0.008567</td>\n",
              "      <td>0.044123</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.378812</td>\n",
              "      <td>-0.344187</td>\n",
              "      <td>0.386784</td>\n",
              "      <td>-0.213177</td>\n",
              "      <td>-0.096439</td>\n",
              "      <td>0.421741</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>exang</th>\n",
              "      <td>0.096801</td>\n",
              "      <td>0.141664</td>\n",
              "      <td>-0.394280</td>\n",
              "      <td>0.067616</td>\n",
              "      <td>0.067023</td>\n",
              "      <td>0.025665</td>\n",
              "      <td>-0.070733</td>\n",
              "      <td>-0.378812</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.288223</td>\n",
              "      <td>-0.257748</td>\n",
              "      <td>0.115739</td>\n",
              "      <td>0.206754</td>\n",
              "      <td>-0.436757</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>oldpeak</th>\n",
              "      <td>0.210013</td>\n",
              "      <td>0.096093</td>\n",
              "      <td>-0.149230</td>\n",
              "      <td>0.193216</td>\n",
              "      <td>0.053952</td>\n",
              "      <td>0.005747</td>\n",
              "      <td>-0.058770</td>\n",
              "      <td>-0.344187</td>\n",
              "      <td>0.288223</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.577537</td>\n",
              "      <td>0.222682</td>\n",
              "      <td>0.210244</td>\n",
              "      <td>-0.430696</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>slope</th>\n",
              "      <td>-0.168814</td>\n",
              "      <td>-0.030711</td>\n",
              "      <td>0.119717</td>\n",
              "      <td>-0.121475</td>\n",
              "      <td>-0.004038</td>\n",
              "      <td>-0.059894</td>\n",
              "      <td>0.093045</td>\n",
              "      <td>0.386784</td>\n",
              "      <td>-0.257748</td>\n",
              "      <td>-0.577537</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.080155</td>\n",
              "      <td>-0.104764</td>\n",
              "      <td>0.345877</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ca</th>\n",
              "      <td>0.276326</td>\n",
              "      <td>0.118261</td>\n",
              "      <td>-0.181053</td>\n",
              "      <td>0.101389</td>\n",
              "      <td>0.070511</td>\n",
              "      <td>0.137979</td>\n",
              "      <td>-0.072042</td>\n",
              "      <td>-0.213177</td>\n",
              "      <td>0.115739</td>\n",
              "      <td>0.222682</td>\n",
              "      <td>-0.080155</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.151832</td>\n",
              "      <td>-0.391724</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>thal</th>\n",
              "      <td>0.068001</td>\n",
              "      <td>0.210041</td>\n",
              "      <td>-0.161736</td>\n",
              "      <td>0.062210</td>\n",
              "      <td>0.098803</td>\n",
              "      <td>-0.032019</td>\n",
              "      <td>-0.011981</td>\n",
              "      <td>-0.096439</td>\n",
              "      <td>0.206754</td>\n",
              "      <td>0.210244</td>\n",
              "      <td>-0.104764</td>\n",
              "      <td>0.151832</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.344029</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>target</th>\n",
              "      <td>-0.225439</td>\n",
              "      <td>-0.280937</td>\n",
              "      <td>0.433798</td>\n",
              "      <td>-0.144931</td>\n",
              "      <td>-0.085239</td>\n",
              "      <td>-0.028046</td>\n",
              "      <td>0.137230</td>\n",
              "      <td>0.421741</td>\n",
              "      <td>-0.436757</td>\n",
              "      <td>-0.430696</td>\n",
              "      <td>0.345877</td>\n",
              "      <td>-0.391724</td>\n",
              "      <td>-0.344029</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d83b9ffd-6df5-462f-bf90-72f3d652e31c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d83b9ffd-6df5-462f-bf90-72f3d652e31c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d83b9ffd-6df5-462f-bf90-72f3d652e31c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-422fe012-8de3-4d71-b499-0435e88bd20e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-422fe012-8de3-4d71-b499-0435e88bd20e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-422fe012-8de3-4d71-b499-0435e88bd20e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 14,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.33257395427258113,\n        \"min\": -0.3985219381210681,\n        \"max\": 1.0,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          0.21001256735867396,\n          0.27632624401913936,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.30179333869282293,\n        \"min\": -0.28093657550176676,\n        \"max\": 1.0,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          0.09609287706773899,\n          0.11826141332036008,\n          -0.09844660247479375\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.33829823825352034,\n        \"min\": -0.39428026849502185,\n        \"max\": 1.0,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          -0.14923015809708104,\n          -0.18105302605349538,\n          -0.06865301584014537\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"trestbps\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2857631931728977,\n        \"min\": -0.14493112849775,\n        \"max\": 1.0,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          0.19321647240953582,\n          0.10138898530055088,\n          0.27935090656128797\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"chol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2868344048930366,\n        \"min\": -0.19791217414110693,\n        \"max\": 1.0,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          0.05395191998699381,\n          0.07051092522607601,\n          0.2136779565595619\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fbs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2700406739375781,\n        \"min\": -0.0841890544310268,\n        \"max\": 1.0,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          0.005747223459644359,\n          0.1379793270278513,\n          0.1213076480933747\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"restecg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28834472482144996,\n        \"min\": -0.15104007833751223,\n        \"max\": 1.0,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          -0.05877022631983708,\n          -0.07204243324693001,\n          -0.11621089815852946\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thalach\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3793009138391197,\n        \"min\": -0.3985219381210681,\n        \"max\": 1.0,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          -0.34418694796671606,\n          -0.21317692811538935,\n          -0.3985219381210681\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"exang\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3641291338459224,\n        \"min\": -0.43675708335330315,\n        \"max\": 1.0,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          0.28822280778276554,\n          0.11573937807050606,\n          0.09680082645526811\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oldpeak\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3819697065641946,\n        \"min\": -0.5775368167291409,\n        \"max\": 1.0,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          1.0,\n          0.22268232182782355,\n          0.21001256735867396\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"slope\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.36548767946196514,\n        \"min\": -0.5775368167291409,\n        \"max\": 1.0,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          -0.5775368167291409,\n          -0.0801552102146397,\n          -0.16881423801209605\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ca\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.32119629198791944,\n        \"min\": -0.39172399235125244,\n        \"max\": 1.0,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          0.22268232182782355,\n          1.0,\n          0.27632624401913936\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3070316735307394,\n        \"min\": -0.34402926803830997,\n        \"max\": 1.0,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          0.21024412598264872,\n          0.15183212548208916,\n          0.06800137705465205\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.42165547633788675,\n        \"min\": -0.43675708335330315,\n        \"max\": 1.0,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          -0.4306960016873686,\n          -0.39172399235125244,\n          -0.22543871587483838\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['age'].hist(bins=10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "id": "ydjQ7NA5HxZ6",
        "outputId": "5a49be99-6a29-4028-a111-3138df1251cd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 7
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "MMLlW1hsJGL_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.hist(figsize=(10,10),bins=20)\n",
        "plt\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "MS8tSN8bKW8j",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 853
        },
        "outputId": "bd2305c5-8f4d-49c9-b541-4a2b73721a8a"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x1000 with 16 Axes>"
            ],
            "image/png": "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/DBu3Djs2rUL1dXVWnVjY2O1pmfNmgUAUp9zcXEBAGzdulX6PSM+U9Sm3b59G/PmzYOvry8UCgU6dOgAd3d3lJSUoLS0VKp34cIFdO3atdby95edOXMGADBixAi4u7tr/e3evRvXrl3T7wYRGciyZctw/Phx+Pr6YtCgQViwYAF+++03AP/rB9HR0bX6wb/+9S+oVCqt/tWlSxcsWLAAubm56NWrF+bOnWuUbSIypOvXr6OsrKzWbTt16datm9Z0u3bt4O3tXefzr0Smyt/fX2v6+vXrKCkpwSeffFLrt2Lq1KkAIB03vfbaa2jXrh0GDRqEbt26ITY2ttm3qt3fjwDgwQcfREVFBa5fv95g3S5dukAul0t97plnnsGQIUPw97//HZ6enoiKisI333xj8QkSnylqw2bNmoXk5GTEx8cjODgYzs7OkMlkiIqKatGOXbPMF198AS8vr1rzra25u5B5ePrpp/Hoo49i8+bN2L17N95991288847+P7776V+8O6772pdXb1Xu3bttKZ3794N4O4zFkVFRXX2HyIiarvuvTsH+N8x09/+9jdER0fXuUzfvn0BAD169MDp06exfft2pKam4rvvvsPq1asxb948LFy4UL+BA7We3bO3t0dWVhb27duHHTt2IDU1FV9//TVGjBiB3bt3w8rKSu8xmSIe5bZh3377LaKjo/H+++9LZZWVlbXGuO/UqRPOnj1ba/n7y7p06QIA8PDwQGhoqO4DJjIh3t7emDlzJmbOnIlr165hwIABeOutt7B8+XIAgFKpbFI/WLt2LdLS0vDWW28hMTERzz//PLZu3arv8ImMyt3dHUqlEsePH2+07pkzZ/D4449L07du3cLVq1cxevRofYZI1GzNGfjD3d0dTk5OqK6ubtJvhaOjI5555hk888wzqKqqwoQJE/DWW29hzpw5sLOza/Sza+5iuNevv/4KBwcHrQEZauree2Xr7Nmz0Gg0WoNlyeVyhISEICQkBB988AHefvtt/POf/8S+ffss9hiQt8+1YVZWVhBCaJWtWrWq1r2l4eHhyM7OxtGjR6Wy4uJifPnll7XqKZVKvP3221Cr1bU+7/7Ls0RtUXV1tdbtb8DdEwE+Pj5QqVQIDAxEly5d8N577+HWrVu1lr+3H+Tn5+OVV15BZGQk3njjDbz33nv4v//7P2mEHyJzJZfLMX78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am4bLSwslK6o1kz3799fqtPc206b8xwe8L9nzeYekkOlqX174fEF4c3eNmoac37Or6XP4RFR6+glKTp27BiCg4NRWVmJdu3aYfPmzejZsyeOHj0KW1tbuLi4aNW/95aHurT07J2xmeoZrIZGkWrszGZDy5rq9upKS8/eDR8+HELUn4ju2lX/A+w1XF1dOWIW0f/n7+8PLy8vpKenS0lQWVkZcnJyMGPGDAAtu+20Jc/hAYBKI6vzmStzO1g3Reb4nJ+5bQ9RW6GXpKh79+44evQoSktL8e233yI6OhqZmZktXl9zz94Zm6mfwWpoFKnGzmzWtWxDI0+ZE569IzKchm479fPzQ3x8PJYsWYJu3bpJQ3L7+PhI7zLibadERNQcekmKbG1t0bVrVwBAYGAgcnNz8eGHH+KZZ55BVVUVSkpKtK4WFRYW6nwULVNgqvE1NIpUY/E2tqwpbq+umPO2EZmahm47TUlJwauvvory8nJMnz4dJSUlGDp0KFJTU6V3FAG87ZSIiJrOIO8p0mg0UKlUCAwMhI2NDdLT0xEZGQkAOH36NC5evIjg4GBDhEJERG1AY7edymQyLFq0CIsWLaq3Dm87JSKiptJ5UjRnzhxERETAz88PN2/exIYNG5CRkYFdu3bB2dkZMTExSEhIgKurK5RKJWbNmoXg4GCOPEdEREREREah86To2rVrmDx5Mq5evQpnZ2f07dsXu3btwsiRIwEAy5cvl25juPflrURERERERMag86Ro3bp1Dc63s7NDUlISkpKSdP3RREREREREzWaQZ4qo7ej8+g5jh0BEREREZFByYwdARERERERkTEyKiIiIiIjIovH2OSIiIiJq03j7P7UWkyIiIiJqMzq/vgMKK4Flg4DeC3ZpvVT8/NIxRoyMiNoy3j5HREREREQWjUkRERERERFZNN4+ZwAN3efKS/1ERERERMbFK0VERERERGTRmBQREREREZFF4+1zZopDUxIRERERNQ2vFBERERERkUVjUkRERERERBaNSREREREREVk0PlNERschy4mIiIjImHiliIiIiIiILBqTIiIiIiIismhMioiIiIiIyKIxKSIiIiIiIovGpIhIz7KysjB27Fj4+PhAJpNhy5YtWvOFEJg3bx68vb1hb2+P0NBQnDlzRqtOcXExJk2aBKVSCRcXF8TExODWrVsG3AoiIiIi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KwvTp0831CYQEVEbYpRnioiIiBoSERGBiIiIOucJIbBixQq8+eabGDduHABg/fr18PT0xJYtWxAVFYVTp04hNTUVubm5GDhwIABg1apVGD16NN577z34+PgYbFuIiMj0MSkiIqI2JT8/HwUFBQgNDZXKnJ2dERQUhOzsbERFRSE7OxsuLi5SQgQAoaGhkMvlyMnJwZNPPllrvSqVCiqVSpqueTeZWq2GWq2uVb+mTCEXdcZZ1zKWorG2ubeOJarZ9ob2KyIyLCZFRETUphQUFAAAPD09tco9PT2leQUFBfDw8NCab21tDVdXV6nO/RITE7Fw4cJa5bt374aDg0O98SweqKmzfOfOnfVvhIWor20Atg8ApKWl1SqrqKgwQiRExKSIiIgIwJw5c5CQkCBNl5WVwdfXF2FhYVAqlbXqq9VqpKWlYe4hOVSa2i/yPr4gXK/xmrLG2gZg+6SlpWHkyJG1Xgxec4WSiAyLSREREbUpXl5eAIDCwkJ4e3tL5YWFhejfv79U59q1a1rL3blzB8XFxdLy91MoFFAoFLXKbWxsah243kulkUFVXfvAv6FlLEV9bQOwfYC69y22C5FxcPQ5IiJqU/z9/eHl5YX09HSprKysDDk5OQgODgYABAcHo6SkBHl5eVKdvXv3QqPRICgoyOAxExGRaeOVIiIiMjm3bt3C2bNnpen8/HwcPXoUrq6u8PPzQ3x8PJYsWYJu3brB398fc+fOhY+PD8aPHw8A6NGjB0aNGoVp06Zh7dq1UKvViIuLQ1RUFEeeIyKiWpgUERGRyTl06BAef/xxabrmWZ/o6GikpKTg1VdfRXl5OaZPn46SkhIMHToUqampsLOzk5b58ssvERcXh5CQEMjlckRGRmLlypUG3xYiIl3o/PqOeucprAwYiJliUkRERCZn+PDhEKL+4ZxlMhkWLVqERYsW1VvH1dUVGzZs0Ed4RERkZvhMERERERERWTQmRUREREREZNGYFBERERERkUVjUkRERERERBaNSREREREREVk0JkVERERERGTRmBQREREREZFFY1JEREREREQWjUkRERERERFZNCZFRERERERk0ZgUERERERGRRWNSREREREREFo1JEREREZEFSExMxMMPPwwnJyd4eHhg/PjxOH36tFadyspKxMbGws3NDe3atUNkZCQKCwuNFDGR4TApIiIiIrIA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pTJnZ2cEBQUhOzu73qRIpVJBpVJJ02VlZQAAtVoNtVqt36CbqSaepsalsBL6DEenFHKh9V9j0+V335TvTRefx6SIiIiIyMIVFBQAADw9PbXKPT09pXl1SUxMxMKFC2uV7969Gw4ODroNUkfS0tKaVG/ZID0HogeLB2qMHQIAYOfOnTpfZ0PfW0VFRavXz6SIiIiIiFpkzpw5SEhIkKbLysrg6+uLsLAwKJVKI0ZWm1qtRlpaGkaOHAkbG5tG6/desMsAUemGQi6weKAGcw/JodLIjB0Oji8I19m6mvK91VyhbA0mRUREREQWzsvLCwBQWFgIb29vqbywsBD9+/evdzmFQgGFQlGr3MbGpkmJhzE0NTZVtfGTi+ZSaWQmEbc+vvuGvjddfB5HnyMiIiKycP7+/vDy8kJ6erpUVlZWhpycHAQHBxsxMiLD4JUiIiIiIgtw69YtnD17VprOz8/H0aNH4erqCj8/P8THx2PJkiXo1q0b/P39MXfuXPj4+GD8+PHGC5rIQJgUEREREVmAQ4cO4fHHH5ema54Fio6ORkpKCl599VWUl5dj+vTpKCkpwdChQ5Gamgo7OztjhUxkMEyKiIiIiCzA8OHDIUT9QzbLZDIsWrQIixYtMmBURKaBzxQREREREZFF45UiM9X59R31zju/dIwBIyEiIiIyTQ0dL5Fl4ZUiIiIiIiKyaEyKiIiIiIjIojEpIiIiIiIii8ZnioiIqFEN3XevsBJYNsiAwRAREemYxSVFfKCOiIiIiIjuxdvniIiIiIjIolnclSIiIiIiItKfxu7MMsXXw/BKERERERERWTQmRUREREREZNGYFBERERERkUVjUkRERERERBaNSREREREREVk0JkVERERERGTRmBQREREREZFF43uKiIiIiKhNa+i9OKb4ThxLZ4rfF68UERERERGRRWNSREREREREFo23zxERERGR2aq5VUthJbBsENB7wS6oqmVGjopMDa8UERERERGRRWNSREREREREFo1JERERERERWTSzfKaooWH+qHXDIDZ0Xy6HvCQiIiJ94fEd6ROvFBERERERkUVjUkRERERERBbNqElRUlISOnfuDDs7OwQFBeGnn34yZjhEJo99hqj52G+Imod9hiyR0Z4p+vrrr5GQkIC1a9ciKCgIK1asQHh4OE6fPg0PDw9jhUVksthniJqP/YaM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i33PmtmlfE91ZvQb78y+X/grUEmRxTAMo/3OOwEAAABAeAmre4oAAAAAoL2RFAEAAAAwNZIiAAAAAKZGUtQJWSwWFRYWttv6duzYIYvFoh07drTbOgEAAIBQQVIUxnbu3KmFCxeqoaEh2KEAQRdO/SGcYgUAwAxIisLYzp07VVxczIEVoPDqD+EUKwAAZkBSBABeGIahb775JthhAACADkBSFKYWLlyoRx99VJKUnp4ui8Uii8Wizz77zF1n48aNGjx4sKxWqwYNGqSysjKPdXz++ef6+c9/rv79+6tLly7q0aOH/uVf/sVjHUA48NUfVq9erbFjxyopKUlWq1U33HCDVq5c2WId11xzje666y5t3bpVI0aMUJcuXfTCCy9IOtdXfvjDH+qKK65QUlKSHn74YW3dutXrvXa7d+/WhAkTFB8fr65du2r06NF69913LylWAAAQHFHBDgBtM2XKFP3973/XK6+8omeffVY9e/aUJF155ZWSpHfeeUd//vOf9fOf/1zdu3fX8uXLlZeXp8OHD6tHjx6SpPfff187d+5Ufn6+rr76an322WdauXKl7rjjDn300Ufq2rVr0LYP8Iev/rBy5UoNGjRIP/zhDxUVFaU33nhDP//5z+V0OlVQUOCxnk8++URTp07VAw88oFmzZql///5qbm7W2LFjVVNTo4ceekgpKSlat26d3nrrrRZxbN++Xbm5uRo+fLgWLFigiIgId1L2f//v/9XIkSMv2ncBAEAQGAhbTz31lCHJqK6u9iiXZMTExBgHDx50l/2///f/DEnGihUr3GWnTp1qsc7KykpDkvHSSy+5y9566y1DkvHWW2+1+zYA7aW1/uBtP8/JyTGuvfZaj7I+ffoYkoyysjKP8t/85jeGJGPjxo3usm+++cYYMGCAR79wOp1Gv379jJycHMPpdHq8f3p6ujF+/PiLxgoAAIKDy+c6qaysLF133XXu6SFDhiguLk7/+Mc/3GVdunRx/9/hcOj48ePq27evEhIStHfv3g6NFwiU8/fzEydO6Ouvv9bo0aP1j3/8QydOnPCom56erpycHI+ysrIyXXXVVfrhD3/oLouNjdWsWbM86u3bt0+ffvqp/vVf/1XHjx/X119/ra+//lrNzc0aN26cKioq5HQ6A7CFAADgcnH5XCfVu3fvFmXf+9739M9//tM9/c0336ikpESrV6/Wl19+KcMw3PMuPFgEwtW7776rBQsWqLKyUqdOnfKYd+LECcXHx7un09PTWyz/+eef67rrrpPFYvEo79u3r8f0p59+KkmaPn16q7GcOHFC3/ve9/zeBgAAEFgkRZ1UZGSk1/LzE585c+Zo9erVmjt3rjIzMxUfHy+LxaL8/Hx+0UancOjQIY0bN04DBgzQM888o7S0NMXExGjLli169tlnW+zn559V8pdrXU899ZSGDRvmtU63bt3avH4AABA4JEVh7MJfrv313//935o+fbp+85vfuMtOnz7Ns1MQlrz1hzfeeEN2u11/+ctfPM6eehskoTV9+vTRRx99JMMwPN7j4MGDHvVcl6vGxcUpKyvL71gBAEDwcE9RGLviiiskqc1JTGRkpMeZI0lasWKFzp49e7mhAR3OW39wnTG98NLQ1atXX/J6c3Jy9OWXX+ovf/mLu+z06dP63e9+51Fv+PDhuu666/T000+rqampxXq++uorn7ECAIDg4UxRGBs+fLgk6Ve/+pXy8/MVHR2tSZMmXfLyd911l/7rv/5L8fHxuuGGG1RZWak333zTPWQ3EE689Yfbb79dMTExmjRpkh544AE1NTXpd7/7nZKSklRTU3NJ633ggQf03HPPaerUqXrooYfUq1cvrV27VrGxsZK+O+sTERGh3//+98rNzdWgQYM0Y8YMXXXVVfryyy/11ltvKS4uTm+88UarsU6aNMmdLAEAgI5FUhTGbr75Zi1evFirVq1SWVmZnE6nqqurL3n53/72t4qMjNTatWt1+vRp3XbbbXrzzTdbjL4FhIPW+sN///d/6/HHH9cjjzyilJQUPfjgg7ryyit1//33X9J6u3Xrpu3bt2vOnDn67W9/q27duum+++7Trbfeqry8PHdyJEl33HGHKisrtXjxYj333HNqampSSkqKMjIy9MADD1w0VpIiAACCw2JceP0UAOCili1bpocfflhHjhzRVVddFexwAADAZSApAoCL+OabbzxGpjt9+rRuuukmnT17Vn//+9+DGBkAAGgPXD4HABcxZcoU9e7dW8OGDdOJEyf08ssv629/+5vWrl0b7NAAAEA7ICkCgIvIycnR73//e61du1Znz57VDTfcoPXr1+vee+8NdmgAAKAdcPkcAAAAAFPjOUUAAAAATI2kCAAAAICpheU9RU6nU0ePHlX37t3dD04E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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.hist(figsize=(10,10),bins=20)\n",
        "plt\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 853
        },
        "id": "lQg9HtiMNsfU",
        "outputId": "ce64fb70-7976-4d89-b891-a2a080365ac7"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x1000 with 16 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "o=[1,3,5,7,9]\n",
        "e=[2,4,6,8,10]"
      ],
      "metadata": {
        "id": "0N5pv70bNu5t"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(8, 6))\n",
        "sns.scatterplot(x=e, y=o)\n",
        "plt.title('Scatter Plot')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "id": "TQFjIWZgNylm",
        "outputId": "f3fb035d-548e-490b-c3ed-ef71dad72017"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAApIAAAIQCAYAAAAy8I61AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy81sbWrAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAr00lEQVR4nO3de5iXdZ34/9cAzjDAzAdwQBkcOTmKopgJuUBg5aFluVhNsyLaEHR368KQvHKVdRWUFMy2k+1SdkAuDbW20A7rIh4AzROmmGQpECmJhXjJHEBnaOb+/dHP+ToxHD5vGD4DPh7XdV+Xcx/mfs19oTy978/nM0VZlmUBAAB56lToAQAAODgJSQAAkghJAACSCEkAAJIISQAAkghJAACSCEkAAJIISQAAkghJAACSCEmAg8wf/vCHKCoqiltvvbXQowDvckIS6DCee+65+OhHPxoDBgyIrl27Rv/+/eOss86Km2++ud3OuXjx4vja17620/pNmzbFnDlzYvXq1e127r+1fPnyKCoqalkOO+ywGDx4cHz605+O3//+9/vlHI8++mjMmTMntm7dul++H/DuJiSBDuHRRx+NESNGxLPPPhv//M//HN/85jfj4osvjk6dOsXXv/71djvv7kLy2muvPaAh+bYZM2bEbbfdFrfccktMmDAh7rrrrhg5cmRs2rRpn7/3o48+Gtdee62QBPaLLoUeACAi4vrrr49cLherVq2Knj17ttq2efPmwgzVDrZt2xbdu3ff7T5jx46Nj370oxERMXXq1Dj22GNjxowZsWjRopg1a9aBGBNgr7gjCXQI69evj2HDhu0UkRERffv23Wnd7bffHu973/uiW7du0atXrxg3blzcd999LdvvueeemDBhQlRWVkZJSUkMGTIk5s6dG01NTS37fOADH4hf/OIX8dJLL7U8Th44cGAsX748Ro4cGRF/Dbm3t73zNYlPPPFE/P3f/33kcrno1q1bnH766fHLX/6y1Yxz5syJoqKieP755+OTn/xk9OrVK97//vfnfW0+9KEPRUTEhg0bdrvfgw8+GGPHjo3u3btHz54945xzzonf/va3rea5/PLLIyJi0KBBLT/XH/7wh7xnAohwRxLoIAYMGBCPPfZYrFmzJk488cTd7nvttdfGnDlzYvTo0XHddddFcXFxPPHEE/Hggw/G2WefHRERt956a/To0SMuu+yy6NGjRzz44INxzTXXRG1tbdx0000REXHVVVdFTU1N/PGPf4yvfvWrERHRo0ePOP744+O6666La665Jv7lX/4lxo4dGxERo0ePjoi/Btv48ePj1FNPjdmzZ0enTp1i4cKF8aEPfSgefvjheN/73tdq3gsuuCCqq6vjhhtuiCzL8r4269evj4iIww8/fJf73H///TF+/PgYPHhwzJkzJ9588824+eabY8yYMfH000/HwIED47zzzosXX3wx7rjjjvjqV78aFRUVERHRp0+fvGcCiIiIDKADuO+++7LOnTtnnTt3zkaNGpX927/9W7Z06dKssbGx1X5r167NOnXqlH3kIx/JmpqaWm1rbm5u+eft27fvdI5//dd/zbp165a99dZbLesmTJiQDRgwYKd9V61alUVEtnDhwp3OUV1dnX34wx/e6XyDBg3KzjrrrJZ1s2fPziIimzRp0l5dg4ceeiiLiOz73/9+9tprr2WbNm3KfvGLX2QDBw7MioqKslWrVmVZlmUbNmzYabb3vOc9Wd++fbPXX3+9Zd2zzz6bderUKfv0pz/dsu6mm27KIiLbsGHDXs0EsDsebQMdwllnnRWPPfZY/OM//mM8++yz8aUvfSk+/OEPR//+/eOnP/1py3533313NDc3xzXXXBOdOrX+T1hRUVHLP5eWlrb8c11dXWzZsiXGjh0b27dvj9/97nfJc65evTrWrl0bn/zkJ+P111+PLVu2xJYtW2Lbtm1xxhlnxMqVK6O5ubnVMZ/5zGfyOse0adOiT58+UVlZGRMmTIht27bFokWLYsSIEW3u/+qrr8bq1avjwgsvjN69e7esHz58eJx11lnxv//7v/n/oAB7waNtoMMYOXJk/OQnP4nGxsZ49tlnY8mSJfHVr341PvrRj8bq1avjhBNOiPXr10enTp3ihBNO2O33+s1vfhP/8R//EQ8++GDU1ta22lZTU5M849q1ayMiYsqUKbvcp6amJnr16tXy9aBBg/I6xzXXXBNjx46Nzp07R0VFRRx//PHRpcuu/3P90ksvRUTEcccdt9O2448/PpYuXbpXb/IByJeQBDqc4uLiGDlyZIwcOTKOPfbYmDp1avzoRz+K2bNn79XxW7dujdNPPz3Ky8vjuuuuiyFDhkTXrl3j6aefjiuuuGKnO4b5ePvYm266Kd7znve0uU+PHj1aff3Ou6N746STToozzzwzaT6AA0lIAh3a249zX3311YiIGDJkSDQ3N8fzzz+/y5Bbvnx5vP766/GTn/wkxo0b17K+rXc9v/Nx+N6sHzJkSERElJeXd5jYGzBgQEREvPDCCztt+93vfhcVFRUtdyN39XMBpPAaSaBDeOihh9p8R/Pbr+97+7HtueeeG506dYrrrrtupzuLbx/fuXPnVl9HRDQ2NsZ///d/7/T9u3fv3uaj7rfD628/uPvUU0+NIUOGxJe//OWor6/f6bjXXnttlz9je+nXr1+85z3viUWLFrWad82aNXHffffFP/zDP7Ss29XPBZDCHUmgQ/jc5z4X27dvj4985CMxdOjQaGxsjEcffTTuuuuuGDhwYEydOjUiIo455pi46qqrYu7cuTF27Ng477zzoqSkJFatWhWVlZUxb968GD16dPTq1SumTJkSM2bMiKKiorjtttvaDNVTTz017rrrrrjsssti5MiR0aNHj5g4cWIMGTIkevbsGd/61reirKwsunfvHqeddloMGjQovvvd78b48eNj2LBhMXXq1Ojfv3+88sor8dBDD0V5eXn87Gc/O9CXL2666aYYP358jBo1Ki666KKWj//J5XIxZ86cVj9vxF8/+ugTn/hEHHbYYTFx4kSvnwTSFPZN4wB/de+992bTpk3Lhg4dmvXo0SMrLi7OjjnmmOxzn/tc9uc//3mn/b///e9np5xySlZSUpL16tUrO/3007Nly5a1bP/lL3+Z/d3f/V1WWlqaVVZWtnycUERkDz30UMt+9fX12Sc/+cmsZ8+eWUS0+iige+65JzvhhBOyLl267PRxO88880x23nnnZYcffnhWUlKSDRgwIPvYxz6WPfDAAy37vP3xP6+99tpeXYO3P/7nRz/60W73a+vjf7Isy+6///5szJgxWWlpaVZeXp5NnDgxe/7553c6fu7cuVn//v2zTp06+SggYJ8UZVnCp+MCAPCu5zWSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJDngH0je3NwcmzZtirKyMr+qCwCgA8qyLOrq6qKysjI6ddr1fccDHpKbNm2KqqqqA31aAADytHHjxjjqqKN2uf2Ah2RZWVlE/HWw8vLyA316AAD2oLa2Nqqqqlq6bVcOeEi+/Ti7vLxcSAIAdGB7ehmiN9sAAJBESAIAkERIAgCQREgCAJBE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ekoAOGjVvrVjt9vr9rAdOqLkkPze974X48ePj8rKyt3uN2vWrKipqWlZNm7cmHpKADholXc9bLfby/awHTqipEfbL730Utx///3xk5/8ZI/7lpSURElJScppAOCQUdGjOMZVV8TKNh5vj6uuiIoeHmtz8Em6I7lw4cLo27dvTJgwYX/PAwCHpFy34ph//vAYV13Rav246oq48fzhXh/JQSnvO5LNzc2xcOHCmDJlSnTpkvxeHQB416nsWRo3TzolttQ3Rt1bO6Ks62FR0aNYRHLQyrsE77///nj55Zdj2rRp7TEPABzSct2EI4eOvEPy7LPPjizL2mMWAAAOIn7XNgAASYQkAABJhCQAAEmEJAAASYQkAABJhCQAAEmEJAAASYQkAABJhCQAAEmEJAAASYQkAABJhCQAAEmEJAAASYQkAABJhCQAAEmEJAAASYQkAABJhCQAAEmEJAAASYQkAABJhCQAAEmEJAAASYQkAABJhCQAAEmEJAAASYQkAABJhCQAAEmEJAAASYQkAABJhCQAAEmEJAAASYQkAABJhCQAAEmEJAAASYQkAABJhCQAAEmEJAAASYQkAABJhCQAAEmEJAAASYQkAABJ8g7JV155JT71qU/F4YcfHqWlpXHSSSfFU0891R6zAQDQgXXJZ+c33ngjxowZEx/84Afj3nvvjT59+sTatWujV69e7TUfAAAdVF4heeONN0ZVVVUsXLiwZd2gQYP2+1AAAHR8eT3a/ulPfxojRoyICy64IPr27RunnHJKfOc732mv2QAA6MDyCsnf//73sWDBgqiuro6lS5fGZz/72ZgxY0YsWrRol8c0NDREbW1tqwUAgINfUZZl2d7uXFxcHCNGjIhHH320Zd2MGTNi1apV8dhjj7V5zJw5c+Laa6/daX1NTU2Ul5cnjAwAQHuqra2NXC63x17L645kv3794oQTTmi17vjjj4+XX355l8fMmjUrampqWpaNGzfmc0oAADqovN5sM2bMmHjhhRdarXvxxRdjwIABuzympKQkSkpK0qYDAKDDyuuO5Oc///l4/PHH44Ybboh169bF4sWL45Zbbonp06e313wAAHRQeYXkyJEjY8mSJXHHHXfEiSeeGHPnzo2vfe1rMXny5PaaDwCADiqvN9vsD3v74k0AAAqjXd5sAwAAbxOSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACTJKyTnzJkTRUVFrZahQ4e212wAHV7N9sZYv7k+nnn5jVj/Wn3UbG8s9EgAB0yXfA8YNmxY3H///f/vG3TJ+1sAHBI2bX0zrvjxr+PhtVta1o2rroj55w+Pyp6lBZwM4MDI+9F2ly5d4sgjj2xZKioq2mMugA6tZnvjThEZEbFy7Za48se/dmcSeFfIOyTXrl0blZWVMXjw4Jg8eXK8/PLLu92/oaEhamtrWy0AB7st9Y07ReTbVq7dElvqhSRw6MsrJE877bS49dZb4//+7/9iwYIFsWHDhhg7dmzU1dXt8ph58+ZFLpdrWaqqqvZ5aIBCq31rx2631+1hO8ChoCjLsiz14K1bt8aAAQPiK1/5Slx00UVt7tPQ0BANDQ0tX9fW1kZVVVXU1NREeXl56qkBCmr95vo44ysrdrn9gctOjyF9exzAiQD2n9ra2sjlcnvstX16p0zPnj3j2GOPjXXr1u1yn5KSkigpKdmX0wB0OBU9imNcdUWsbOPx9rjqiqjoUVyAqQAOrH36HMn6+vpYv3599OvXb3/NA3BQyHUrjvnnD49x1a3fcDiuuiJuPH945LoJSeDQl9cdyS984QsxceLEGDBgQGzatClmz54dnTt3jkmTJrXXfAAdVmXP0rh50imxpb4x6t7aEWVdD4uKHsUiEnjXyCsk//jHP8akSZPi9ddfjz59+sT73//+ePzxx6NPnz7tNR9Ah5brJhyBd6+8QvLOO+9srzkAADjI+F3bAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACQRkgAAJBGSAAAkEZIAACTZp5CcP39+FBUVxcyZM/fTOAAAHCySQ3LVqlXx7W9/O4YPH74/5wEA4CCRFJL19fUxefLk+M53vhO9evXa3zMBAHAQSArJ6dOnx4QJE+LMM8/c3/MAAHCQ6JLvAXfeeWc8/fTTsWrVqr3av6GhIRoaGlq+rq2tzfeUAAB0QHndkdy4cWNceuml8YMf/CC6du26V8fMmzcvcrlcy1JVVZU0KAAAHUtRlmXZ3u589913x0c+8pHo3Llzy7qmpqYoKiqKTp06RUNDQ6ttEW3fkayqqoqampooLy/fDz8CAAD7U21tbeRyuT32Wl6Pts8444x47rnnWq2bOnVqDB06NK644oqdIjIioqSkJEpKSvI5DQAAB4G8QrKsrCxOPPHEVuu6d+8ehx9++E7rAQA4tPnNNgAAJMn7Xdt/a/ny5fthDAAADjbuSAIAkERIAgCQREgCAJBESAIAkERIAgCQREgCAJBESAIAkERIAgCQREgCAJBESAIAkERIAgCQREgCAJBESAIAkERIAgCQREgCAJBESAIAkERIAgCQREgCAJBESAIAkERIAgCQREgCAJBESAIAkERIAgCQREgCAJBESAIAkERIAgCQREgCAJBESAIAkERIAgCQREgCAJBESAIAkERIAgCQREgCAJBESAIAkERIAgCQREgCAJBESAIAkERIAgCQREgCAJBESAIAkERIAgCQREgCAJAkr5BcsGBBDB8+PMrLy6O8vDxGjRoV9957b3vNBgdczfbGWL+5Pp55+Y1Y/1p91GxvLPRIANBhdcln56OOOirmz58f1dXVkWVZLFq0KM4555x45plnYtiwYe01IxwQm7a+GVf8+Nfx8NotLevGVVfE/POHR2XP0gJOBgAdU1GWZdm+fIPevXvHTTfdFBdddNFe7V9bWxu5XC5qamqivLx8X04N+03N9sa45I5nWkXk28ZVV8TNk06JXLfiAkwGAAfe3vZaXnck36mpqSl+9KMfxbZt22LUqFG73K+hoSEaGhpaDQYdzZb6xjYjMiJi5dotsaW+UUgCwN/I+802zz33XPTo0SNKSkriM5/5TCxZsiROOOGEXe4/b968yOVyLUtVVdU+DQztofatHbvdXreH7QDwbpR3SB533HGxevXqeOKJJ+Kzn/1sTJkyJZ5//vld7j9r1qyoqalpWTZu3LhPA0N7KO962G63l+1hOwC8G+X9aLu4uDiOOeaYiIg49dRTY9WqVfH1r389vv3tb7e5f0lJSZSUlOzblNDOKnoUx7jqili5i9dIVvTwWBsA/tY+f45kc3Nzq9dAwsEo16045p8/PMZVV7RaP666Im48f7jXRwJAG/K6Izlr1qwYP358HH300VFXVxeLFy+O5cuXx9KlS9trPjhgKnuWxs2TTokt9Y1R99aOKOt6WFT0KBaRALALeYXk5s2b49Of/nS8+uqrkcvlYvjw4bF06dI466yz2ms+OKBy3YQjAOytvELye9/7XnvNAQDAQcbv2gYAIImQBAAgiZAEACCJkAQAIImQBAAgiZAEACCJkAQAIImQBAAgiZAEACCJkAQAIImQBAAgiZAEACCJkAQAIImQBAAgiZAEACCJkAQAIImQBAAgiZAEACCJkAQAIImQBAAgiZAEACCJkAQAIImQBAAgiZAEACCJkAQAIImQBAAgiZAEACCJkAQAIImQBAAgiZAEACCJkAQAIImQBAAgiZAEACCJkAQAIImQBAAgiZAEACCJkAQAIImQBAAgiZAEACCJkAQAIImQBAAgSV4hOW/evBg5cmSUlZVF375949xzz40XXnihvWYDAKADyyskV6xYEdOnT4/HH388li1bFjt27Iizzz47tm3b1l7zAQDQQRVlWZalHvzaa69F3759Y8WKFTFu3Li9Oqa2tjZyuVzU1NREeXl56qkBAGgne9tr+/QayZqamoiI6N279758GwAADkJdUg9sbm6OmTNnxpgxY+LEE0/c5X4NDQ3R0NDQ8nVtbW3qKQEA6ECS70hOnz491qxZE3feeedu95s3b17kcrmWpaqqKvWUAAB0IEmvkbzkkkvinnvuiZUrV8agQYN2u29bdySrqqq8RhIAoIPa29dI5vVoO8uy+NznPhdLliyJ5cuX7zEiIyJKSkqipKQkn9MAAHAQyCskp0+fHosXL4577rknysrK4k9/+lNERORyuSgtLW2XAQEA6JjyerRdVFTU5vqFCxfGhRdeuFffw8f/AAB0bO32aBsAACL8rm0AABIJSQAAkghJAACSCEkAAJIISQAAkghJAACSCEkAAJIISQAAkghJAACSCEkAAJIISQAAkghJAACSCEkAAJIISQAAkghJAACSCEkAAJIISQAAkghJAACSCEkAAJIISQAAkghJAACSCEkAAJIISQAAkghJAACSCEkAAJIISQAAkghJAACSCEkAAJIISQAAkghJAACSCEkAAJIISQAAkghJAACSCEkAAJIISQAAkghJAACSCEkAAJIISQAAkghJAACSCEkAAJIISQAAkghJAACS5B2SK1eujIkTJ0ZlZWUUFRXF3Xff3Q5j7R812xtj/eb6eOblN2L9a/VRs72x0CMBABwyuuR7wLZt2+Lkk0+OadOmxXnnndceM+0Xm7a+GVf8+Nfx8NotLevGVVfE/POHR2XP0gJOBgBwaMg7JMePHx/jx49vj1n2m5rtjTtFZETEyrVb4sof/zpunnRK5LoVF2g6AIBDQ94hma+GhoZoaGho+bq2tra9Txlb6ht3isi3rVy7JbbUNwpJAIB91O5vtpk3b17kcrmWpaqqqr1PGbVv7djt9ro9bAcAYM/aPSRnzZoVNTU1LcvGjRvb+5RR3vWw3W4v28N2AAD2rN0fbZeUlERJSUl7n6aVih7FMa66Ila28Xh7XHVFVPTwWBsAYF8dkp8jmetWHPPPHx7jqitarR9XXRE3nj/c6yMBAPaDvO9I1tfXx7p161q+3rBhQ6xevTp69+4dRx999H4dbl9U9iyNmyedElvqG6PurR1R1vWwqOhRLCIBAPaToizLsnwOWL58eXzwgx/caf2UKVPi1ltv3ePxtbW1kcvloqamJsrLy/M5NQAAB8De9lredyQ/8IEPRJ7tCQDAIeiQfI0kAADtT0gCAJBESAIAkERIAgCQREgCAJBESAIAkERIAgCQREgCAJBESAIAkERIAgCQREgCAJBESAIAkERIAgCQpMuBPmGWZRERUVtbe6BPDQDAXni7097utl054CFZV1cXERFVVVUH+tQAAOShrq4ucrncLrcXZXtKzf2subk5Nm3aFGVlZVFUVNTu56utrY2qqqrYuHFjlJeXt/v5Dhauy665Nm1zXXbNtWmb67Jrrk3bXJe2FeK6ZFkWdXV1UVlZGZ067fqVkAf8jmSnTp3iqKOOOtCnjfLycn8o2+C67Jpr0zbXZddcm7a5Lrvm2rTNdWnbgb4uu7sT+TZvtgEAIImQBAAgySEfkiUlJTF79uwoKSkp9Cgdiuuya65N21yXXXNt2ua67Jpr0zbXpW0d+boc8DfbAABwaDjk70gCANA+hCQAAEmEJAAASYQkAABJDsmQnDdvXowcOTLKysqib9++ce6558YLL7xQ6LE6hAULFsTw4cNbPtR01KhRce+99xZ6rA5n/vz5UVRUFDNnziz0KAU3Z86cKCoqarUMHTq00GN1CK+88kp86lOfisMPPzxKS0vjpJNOiqeeeqrQYxXcwIEDd/ozU1RUFNOnTy/0aAXV1NQUV199dQwaNChKS0tjyJAhMXfu3D3+LuN3g7q6upg5c2YMGDAgSktLY/To0bFq1apCj3XArVy5MiZOnBiVlZVRVFQUd999d6vtWZbFNddcE/369YvS0tI488wzY+3atYUZ9v93SIbkihUrYvr06fH444/HsmXLYseOHXH22WfHtm3bCj1awR111FExf/78+NWvfhVPPfVUfOhDH4pzzjknfvOb3xR6tA5j1apV8e1vfzuGDx9e6FE6jGHDhsWrr77asjzyyCOFHqng3njjjRgzZkwcdthhce+998bzzz8f//mf/xm9evUq9GgFt2rVqlZ/XpYtWxYRERdccEGBJyusG2+8MRYsWBDf/OY347e//W3ceOON8aUvfSluvvnmQo9WcBdffHEsW7Ysbrvttnjuuefi7LPPjjPPPDNeeeWVQo92QG3bti1OPvnk+K//+q82t3/pS1+Kb3zjG/Gtb30rnnjiiejevXt8+MMfjrfeeusAT/oO2bvA5s2bs4jIVqxYUehROqRevXpl3/3udws9RodQV1eXVVdXZ8uWLctOP/307NJLLy30SAU3e/bs7OSTTy70GB3OFVdckb3//e8v9BgHhUsvvTQbMmRI1tzcXOhRCmrChAnZtGnTWq0777zzssmTJxdooo5h+/btWefOnbOf//znrda/973vza666qoCTVV4EZEtWbKk5evm5ubsyCOPzG666aaWdVu3bs1KSkqyO+64owAT/tUheUfyb9XU1ERERO/evQs8ScfS1NQUd955Z2zbti1GjRpV6HE6hOnTp8eECRPizDPPLPQoHcratWujsrIyBg8eHJMnT46XX3650CMV3E9/+tMYMWJEXHDBBdG3b9845ZRT4jvf+U6hx+pwGhsb4/bbb49p06ZFUVFRoccpqNGjR8cDDzwQL774YkREPPvss/HII4/E+PHjCzxZYf3lL3+Jpqam6Nq1a6v1paWlnn68w4YNG+JPf/pTq7+fcrlcnHbaafHYY48VbK4uBTvzAdLc3BwzZ86MMWPGxIknnljocTqE5557LkaNGhVvvfVW9OjRI5YsWRInnHBCoccquDvvvDOefvrpd+XrcnbntNNOi1tvvTWOO+64ePXVV+Paa6+NsWPHxpo1a6KsrKzQ4xXM73//+1iwYEFcdtll8e///u+xatWqmDFjRhQXF8eUKVMKPV6Hcffdd8fWrVvjwgsvLPQoBXfllVdGbW1tDB06NDp37hxNTU1x/fXXx+TJkws9WkGVlZXFqFGjYu7cuXH88cfHEUccEXfccUc89thjccwxxxR6vA7jT3/6U0REHHHEEa3WH3HEES3bCuGQD8np06fHmjVr/F/NOxx33HGxevXqqKmpif/5n/+JKVOmxIoVK97VMblx48a49NJLY9myZTv9X/G73TvvlgwfPjxOO+20GDBgQPzwhz+Miy66qICTFVZzc3OMGDEibrjhhoiIOOWUU2LNmjXxrW99S0i+w/e+970YP358VFZWFnqUgvvhD38YP/jBD2Lx4sUxbNiwWL16dcycOTMqKyvf9X9mbrvttpg2bVr0798/OnfuHO9973tj0qRJ8atf/arQo7EHh/Sj7UsuuSR+/vOfx0MPPRRHHXVUocfpMIqLi+OYY46JU089NebNmxcnn3xyfP3rXy/0WAX1q1/9KjZv3hzvfe97o0uXLtGlS5dYsWJFfOMb34guXbpEU1NToUfsMHr27BnHHntsrFu3rtCjFFS/fv12+p+v448/3mP/d3jppZfi/vvvj4svvrjQo3QIl19+eVx55ZXxiU98Ik466aT4p3/6p/j85z8f8+bNK/RoBTdkyJBYsWJF1NfXx8aNG+PJJ5+MHTt2xODBgws9Wodx5JFHRkTEn//851br//znP7dsK4RDMiSzLItLLrkklixZEg8++GAMGjSo0CN1aM3NzdHQ0FDoMQrqjDPOiOeeey5Wr17dsowYMSImT54cq1evjs6dOxd6xA6jvr4+1q9fH/369Sv0KAU1ZsyYnT5W7MUXX4wBAwYUaKKOZ+HChdG3b9+YMGFCoUfpELZv3x6dOrX+a7dz587R3NxcoIk6nu7du0e/fv3ijTfeiKVLl8Y555xT6JE6jEGDBsWRRx4ZDzzwQMu62traeOKJJwr6PodD8tH29OnTY/HixXHPPfdEWVlZy2sHcrlclJaWFni6wpo1a1aMHz8+jj766Kirq4vFixfH8uXLY+nSpYUeraDKysp2eg1t9+7d4/DDD3/Xv7b2C1/4QkycODEGDBgQmzZtitmzZ0fnzp1j0qRJhR6toD7/+c/H6NGj44YbboiPfexj8eSTT8Ytt9wSt9xyS6FH6xCam5tj4cKFMWXKlOjS5ZD8qyZvEydOjOuvvz6OPvroGDZsWDzzzDPxla98JaZNm1bo0Qpu6dKlkWVZHHfccbFu3bq4/PLLY+jQoTF16tRCj3ZA1dfXt3ras2HDhli9enX07t07jj766Jg5c2Z88YtfjOrq6hg0aFBcffXVUVlZGeeee27hhi7Y+8XbUUS0uSxcuLDQoxXctGnTsgEDBmTFxcVZnz59sjPOOCO77777Cj1Wh+Tjf/7q4x//eNavX7+suLg469+/f/bxj388W7duXaHH6hB+9rOfZSeeeGJWUlKSDR06NLvlllsKPVKHsXTp0iwishdeeKHQo3QYtbW12aWXXpodffTRWdeuXbPBgwdnV111VdbQ0FDo0QrurrvuygYPHpwVFxdnRx55ZDZ9+vRs69athR7rgHvooYfa7JcpU6ZkWfbXjwC6+uqrsyOOOCIrKSnJzjjjjIL/O1aUZT5SHwCA/B2Sr5EEAKD9CUkAAJIISQAAkghJAACSCEkAAJIISQAAkghJAACSCEkAAJIISQAAkghJAACSCEkAAJIISQAAkvx/OG304/aH45kAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(8, 6))\n",
        "sns.scatterplot(x=df['age'], y=df['chol'])\n",
        "plt.title('Scatter Plot')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "Mbpdh0ZdPddT",
        "outputId": "19b56ce5-4268-4232-c08c-3f0b9fbd9b08"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data = pd.DataFrame({\n",
        "    'Math': [85, 78, 92, 88, 76],\n",
        "    'Science': [88, 79, 95, 84, 82],\n",
        "    'English': [75, 83, 89, 92, 80]\n",
        "})\n",
        "\n",
        "# correlation matrix\n",
        "correlation_matrix = data.corr()\n",
        "\n",
        "# heatmap\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt='.2f')\n",
        "\n",
        "plt.title('Correlation Heatmap')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "id": "rFNW8LcjRqsR",
        "outputId": "f5b0c5da-028c-4d4f-f4bf-8761b843f64d"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n"
      ],
      "metadata": {
        "id": "ok7pfAArTLd1"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x = np.linspace(0, 10, 100)\n",
        "y = np.sin(x)\n",
        "plt.figure(figsize=(8, 6))\n",
        "plt.plot(x, y, label='sin(x)')\n",
        "plt.title('Line Plot')\n",
        "plt.xlabel('x-axis')\n",
        "plt.ylabel('y-axis')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "Q8wAuxi3SFDm",
        "outputId": "38291ef9-0a89-4996-9aa4-fa9823b79f72"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(8, 6))\n",
        "df['sex'].value_counts().plot(kind='bar')\n",
        "plt.title('Bar Plot of Sex Distribution')\n",
        "plt.xlabel('Sex (0 = Female, 1 = Male)')\n",
        "plt.ylabel('Count')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 559
        },
        "id": "CQzKliZ2TYtA",
        "outputId": "0108e7d5-2e70-4532-c579-7caabbadd84f"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAArcAAAIeCAYAAAChjidRAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy81sbWrAAAACXBIWXMAAA9hAAAPYQGoP6dpAABAtUlEQVR4nO3deVxWZf7/8feNwA0qiyhrkpC571sulbglolkWNqOpX1DUMrTEmorJcmnBKXOpTKcmUSvH1MrKUscttURzSc1KU0ezUQFL4RZURDm/P3x4/7pjERC44fR6Ph7n8eBc13Wu8zm3im8O131ui2EYhgAAAAATcHF2AQAAAEBZIdwCAADANAi3AAAAMA3CLQAAAEyDcAsAAADTINwCAADANAi3AAAAMA3CLQAAAEyDcAsAAADTINwCMJXY2FiFhYU5uwwHWVlZGjlypIKCgmSxWDR+/Hhnl1RuFixYIIvFomPHjpX7uf74Z33s2DFZLBZNnz693M8tSZMnT5bFYqmQcwEoPsItgCJdCyu/3wICAtS9e3etWrWqwuro1q2bQw1+fn7q0KGD5s+fr7y8vDI5x0svvaQVK1aUyVx/nHfBggUaM2aM3n33XQ0bNqzQsZcuXdLs2bPVpk0beXt7y9fXV82aNdPo0aN14MCBMq+tKF9++aXDa261WhUYGKhu3brppZde0unTp8vkPOfPn9fkyZP15Zdflsl8Zaky1wagYK7OLgBA1TB16lSFh4fLMAylpaVpwYIF6tu3rz777DPdfffdFVJD3bp1lZSUJEk6ffq0Fi1apLi4OP3000+aNm3aDc//0ksvaeDAgRowYMANz/V7GzZsUKdOnTRp0qTrjo2OjtaqVas0ePBgjRo1Srm5uTpw4IBWrlypLl26qHHjxmVaW3E8+uij6tChg65cuaLTp09r69atmjRpkmbMmKGlS5eqR48e9rHDhg3ToEGDZLVaiz3/+fPnNWXKFElXf4gprrfffrvMfrApTFG1TZw4UU8//XS5nh9AyRFuARRLVFSU2rdvb9+Pi4tTYGCg/v3vf5dJuM3Ly9OlS5fk4eFR6BgfHx8NHTrUvv/QQw+pUaNGeuONN/T888/Lzc3thusoD+np6WratOl1x+3YsUMrV67Uiy++qL///e8OfW+88YYyMjLKqcKi3XnnnRo4cKBD2969e9W7d29FR0frhx9+UHBwsCSpWrVqqlatWrnWk52drRo1ajj9z9vV1VWurvw3ClQ2LEsAUCq+vr7y9PTM95/79OnT1aVLF9WuXVuenp5q166dli9fnu94i8WisWPH6v3331ezZs1ktVq1evXqEtVQvXp1derUSdnZ2UX+ijw7O1uPP/64QkNDZbVa1ahRI02fPl2GYTjUk52drYULF9p/DR8bG1vk+dPT0+0h38PDQ61atdLChQvt/dd+rX/06FF9/vnn9nkLW4965MgRSdLtt9+er69atWqqXbu2Q9uJEyc0YsQIBQYGymq1qlmzZpo/f769/8KFC2rcuLEaN26sCxcu2NvPnDmj4OBgdenSRVeuXCnyGgvTqlUrzZo1SxkZGXrjjTfs7QWtud25c6ciIyNVp04deXp6Kjw8XCNGjJB0dZ2sv7+/JGnKlCn212jy5MmSrq6rrVmzpo4cOaK+ffvKy8tLQ4YMsfcVtr565syZqlevnjw9PRUREaH9+/c79Hfr1q3Au8S/n/N6tRW05vby5ct6/vnnVb9+fVmtVoWFhenvf/+7cnJyHMaFhYXp7rvv1ldffaXbbrtNHh4euuWWW7Ro0aKCX3AAxcaPnACKJTMzU7/++qsMw1B6erpef/11ZWVlOdxJlaTZs2frnnvu0ZAhQ3Tp0iUtWbJEDzzwgFauXKl+/fo5jN2wYYOWLl2qsWPHqk6dOqV6I9h///tfVatWTb6+vgX2G4ahe+65Rxs3blRcXJxat26tNWvW6G9/+5tOnDihmTNnSpLeffddjRw5UrfddptGjx4tSapfv36h571w4YK6deumw4cPa+zYsQoPD9eyZcsUGxurjIwMPfbYY2rSpIneffddJSQkqG7dunr88cclyR6Y/qhevXqSpPfff1+33357kXcF09LS1KlTJ/sPCf7+/lq1apXi4uJks9k0fvx4eXp6auHChbr99tv1zDPPaMaMGZKk+Ph4ZWZmasGCBTd0l3XgwIGKi4vTf/7zH7344osFjklPT1fv3r3l7++vp59+Wr6+vjp27Jg++ugj+2sxd+5cjRkzRvfdd5/uv/9+SVLLli3tc1y+fFmRkZG64447NH36dFWvXr3IuhYtWqRz584pPj5eFy9e1OzZs9WjRw999913CgwMLPb1Fae2Pxo5cqQWLlyogQMH6vHHH9f27duVlJSkH3/8UR9//LHD2MOHD9tfw5iYGM2fP1+xsbFq166dmjVrVuw6AfyBAQBFSE5ONiTl26xWq7FgwYJ848+fP++wf+nSJaN58+ZGjx49HNolGS4uLsb3339frDoiIiKMxo0bG6dPnzZOnz5t/Pjjj8ajjz5qSDL69+9vHxcTE2PUq1fPvr9ixQpDkvHCCy84zDdw4EDDYrEYhw8ftrfVqFHDiImJKVY9s2bNMiQZ7733nsO1du7c2ahZs6Zhs9ns7fXq1TP69et33Tnz8vKMiIgIQ5IRGBhoDB482JgzZ47x888/5xsbFxdnBAcHG7/++qtD+6BBgwwfHx+HP4fExETDxcXF2Lx5s7Fs2TJDkjFr1qzr1rNx40ZDkrFs2bJCx7Rq1cqoVauWff/a35ejR48ahmEYH3/8sSHJ2LFjR6FznD592pBkTJo0KV9fTEyMIcl4+umnC+z7/Z/10aNHDUmGp6en8b///c/evn37dkOSkZCQYG+LiIgwIiIirjtnUbVNmjTJ+P1/o3v27DEkGSNHjnQY98QTTxiSjA0bNtjb6tWrZ0gyNm/ebG9LT083rFar8fjjj+c7F4DiY1kCgGKZM2eO1q5dq7Vr1+q9995T9+7dNXLkSPsduGs8PT3tX589e1aZmZm68847tXv37nxzRkREFGst6jUHDhyQv7+//P391aRJE73++uvq16+fw6/i/+iLL75QtWrV9Oijjzq0P/744zIMo9RPfPjiiy8UFBSkwYMH29vc3Nz06KOPKisrS5s2bSrxnBaLRWvWrNELL7ygWrVq6d///rfi4+NVr149/fWvf7WvuTUMQx9++KH69+8vwzD066+/2rfIyEhlZmY6vN6TJ09Ws2bNFBMTo0ceeUQRERH5Xo/Sqlmzps6dO1do/7U76itXrlRubm6pzzNmzJhijx0wYIBuuukm+/5tt92mjh076osvvij1+Yvj2vwTJkxwaL92x/7zzz93aG/atKnuvPNO+76/v78aNWqk//73v+VaJ2B2LEsAUCy33XabwxvKBg8erDZt2mjs2LG6++675e7uLulqiHnhhRe0Z88eh3WGBT0PNDw8vEQ1hIWF6e2335bFYpGHh4caNGiggICAIo/5+eefFRISIi8vL4f2Jk2a2PtL4+eff1aDBg3k4uJ4j+BG57VarXrmmWf0zDPP6NSpU9q0aZNmz56tpUuXys3NTe+9955Onz6tjIwMvfXWW3rrrbcKnCc9Pd3+tbu7u+bPn68OHTrIw8NDycnJZfZ81qysrHyv7e9FREQoOjpaU6ZM0cyZM9WtWzcNGDBADz74YLGfqODq6qq6desWu6YGDRrka2vYsKGWLl1a7DlK4+eff5aLi4tuvfVWh/agoCD5+vrm+ztx880355ujVq1aOnv2bLnWCZgd4RZAqbi4uKh79+6aPXu2Dh06pGbNmmnLli2655571LVrV7355psKDg6Wm5ubkpOTtXjx4nxz/P4ub3HUqFFDvXr1KqtLqPSCg4M1aNAgRUdHq1mzZlq6dKkWLFhgf/zV0KFDFRMTU+Cxf1wXumbNGknSxYsXdejQoRL/YFGQ3Nxc/fTTT2revHmhYywWi5YvX65t27bps88+05o1azRixAi9+uqr2rZtm2rWrHnd81it1nw/RNwoi8Xi8IbCa0r7Brs/zl0cha13LqguAMVHuAVQapcvX5Z09e6dJH344Yfy8PDQmjVrHO7KJScnO6U+6eqbtNatW6dz58453GG89oEI197EJRU/lFw7bt++fcrLy3MIXgXNe6Pc3NzUsmVLHTp0SL/++qv8/f3l5eWlK1euFCvs79u3T1OnTtXw4cO1Z88ejRw5Ut999518fHxuqK7ly5frwoULioyMvO7YTp06qVOnTnrxxRe1ePFiDRkyREuWLNHIkSPL/FO+Dh06lK/tp59+cnjDYq1atQr89f8f766W9O9EXl6eDh06ZL+DL119819GRkaZ/p0AUDjW3AIoldzcXP3nP/+Ru7u7/T/yatWqyWKxONz9OnbsWLl86ldx9e3bV1euXHF4XJV09VFRFotFUVFR9rYaNWoU+1myffv2VWpqqj744AN72+XLl/X666+rZs2aioiIKHGthw4d0vHjx/O1Z2RkKCUlRbVq1ZK/v7+qVaum6Ohoffjhh/kecSXJ4bFoubm5io2NVUhIiGbPnq0FCxYoLS1NCQkJJa7v9/bu3avx48erVq1aio+PL3Tc2bNn892JbN26tSTZl61ce/pBWT3Hd8WKFTpx4oR9/5tvvtH27dsd/qzr16+vAwcOOLxWe/fu1ddff+0wV0lq69u3ryRp1qxZDu3XnlLxx6eFACgf3LkFUCyrVq2y35VMT0/X4sWLdejQIT399NPy9vaWdPU/7xkzZqhPnz568MEHlZ6erjlz5ujWW2/Vvn37nFJ3//791b17dz3zzDM6duyYWrVqpf/85z/65JNPNH78eIfHfbVr107r1q3TjBkzFBISovDwcHXs2LHAeUePHq1//vOfio2N1a5duxQWFqbly5fr66+/1qxZs4pch1qYvXv36sEHH1RUVJTuvPNO+fn56cSJE1q4cKFOnjypWbNm2X+VPW3aNG3cuFEdO3bUqFGj1LRpU505c0a7d+/WunXrdObMGUmyr39ev369vLy81LJlSz333HOaOHGiBg4caA9kRdmyZYsuXryoK1eu6LffftPXX3+tTz/9VD4+Pvr4448VFBRU6LELFy7Um2++qfvuu0/169fXuXPn9Pbbb8vb29t+bk9PTzVt2lQffPCBGjZsKD8/PzVv3rzI5Q5FufXWW3XHHXdozJgxysnJ0axZs1S7dm09+eST9jEjRozQjBkzFBkZqbi4OKWnp2vevHlq1qyZbDabfVxJamvVqpViYmL01ltvKSMjQxEREfrmm2+0cOFCDRgwQN27dy/V9QAoIWc+qgFA5VfQo8A8PDyM1q1bG3PnzjXy8vIcxr/zzjtGgwYNDKvVajRu3NhITk7O98gkw7j6KLD4+Phi1xEREWE0a9bsuuP++CgnwzCMc+fOGQkJCUZISIjh5uZmNGjQwHjllVfy1X7gwAGja9euhqenpyHpuo8FS0tLM4YPH27UqVPHcHd3N1q0aGEkJyfnG1fcR4GlpaUZ06ZNMyIiIozg4GDD1dXVqFWrltGjRw9j+fLlBY6Pj483QkNDDTc3NyMoKMjo2bOn8dZbbxmGYRi7du0yXF1djXHjxjkcd/nyZaNDhw5GSEiIcfbs2ULrufYosGubm5ub4e/vb3Tt2tV48cUXjfT09HzH/PFRYLt37zYGDx5s3HzzzYbVajUCAgKMu+++29i5c6fDcVu3bjXatWtnuLu7Ozx6KyYmxqhRo0aB9RX2KLBXXnnFePXVV43Q0FDDarUad955p7F37958x7/33nvGLbfcYri7uxutW7c21qxZU+Dfn8JqK+jvdW5urjFlyhQjPDzccHNzM0JDQ43ExETj4sWLDuMK+ztR2CPKABSfxTBYuQ4AAABzYM0tAAAATINwCwAAANMg3AIAAMA0CLcAAAAwDcItAAAATINwCwAAANPgQxwk5eXl6eTJk/Ly8irzj4EEAADAjTMMQ+fOnVNISIjDx57/EeFW0smTJxUaGursMgAAAHAdv/zyi+rWrVtoP+FWsn9M5i+//GL/GFEAAABUHjabTaGhodf9eHPCrWRfiuDt7U24BQAAqMSut4SUN5QBAADANAi3AAAAMA3CLQAAAEyDcAsAAADTINwCAADANAi3AAAAMA3CLQAAAEyDcAsAAADTINwCAADANAi3AAAAMA3CLQAAAEyDcAsAAADTINwCAADANAi3AAAAMA3CLQAAAEyDcAsAAADTINwCAADANAi3AAAAMA3CLQAAAEzD1dkFoOoKe/pzZ5eAP4lj0/o5uwQAQBXBnVsAAACYBuEWAAAApkG4BQAAgGkQbgEAAGAahFsAAACYBuEWAAAApkG4BQAAgGkQbgEAAGAahFsAAACYBuEWAAAApuHUcJuUlKQOHTrIy8tLAQEBGjBggA4ePOgw5uLFi4qPj1ft2rVVs2ZNRUdHKy0tzWHM8ePH1a9fP1WvXl0BAQH629/+psuXL1fkpQAAAKAScGq43bRpk+Lj47Vt2zatXbtWubm56t27t7Kzs+1jEhIS9Nlnn2nZsmXatGmTTp48qfvvv9/ef+XKFfXr10+XLl3S1q1btXDhQi1YsEDPPfecMy4JAAAATmQxDMNwdhHXnD59WgEBAdq0aZO6du2qzMxM+fv7a/HixRo4cKAk6cCBA2rSpIlSUlLUqVMnrVq1SnfffbdOnjypwMBASdK8efP01FNP6fTp03J3d7/ueW02m3x8fJSZmSlvb+9yvUYzCXv6c2eXgD+JY9P6ObsEAICTFTevVao1t5mZmZIkPz8/SdKuXbuUm5urXr162cc0btxYN998s1JSUiRJKSkpatGihT3YSlJkZKRsNpu+//77As+Tk5Mjm83msAEAAKDqqzThNi8vT+PHj9ftt9+u5s2bS5JSU1Pl7u4uX19fh7GBgYFKTU21j/l9sL3Wf62vIElJSfLx8bFvoaGhZXw1AAAAcIZKE27j4+O1f/9+LVmypNzPlZiYqMzMTPv2yy+/lPs5AQAAUP5cnV2AJI0dO1YrV67U5s2bVbduXXt7UFCQLl26pIyMDIe7t2lpaQoKCrKP+eabbxzmu/Y0hWtj/shqtcpqtZbxVQAAAMDZnHrn1jAMjR07Vh9//LE2bNig8PBwh/527drJzc1N69evt7cdPHhQx48fV+fOnSVJnTt31nfffaf09HT7mLVr18rb21tNmzatmAsBAABApeDUO7fx8fFavHixPvnkE3l5ednXyPr4+MjT01M+Pj6Ki4vThAkT5OfnJ29vb40bN06dO3dWp06dJEm9e/dW06ZNNWzYML388stKTU3VxIkTFR8fz91ZAACAPxmnhtu5c+dKkrp16+bQnpycrNjYWEnSzJkz5eLioujoaOXk5CgyMlJvvvmmfWy1atW0cuVKjRkzRp07d1aNGjUUExOjqVOnVtRlAAAAoJKoVM+5dRaec1s6POcWFYXn3AIAquRzbgEAAIAbQbgFAACAaRBuAQAAYBqEWwAAAJgG4RYAAACmQbgFAACAaRBuAQAAYBqEWwAAAJgG4RYAAACmQbgFAACAaRBuAQAAYBqEWwAAAJgG4RYAAACmQbgFAACAaRBuAQAAYBqEWwAAAJgG4RYAAACmQbgFAACAaRBuAQAAYBqEWwAAAJgG4RYAAACmQbgFAACAaRBuAQAAYBqEWwAAAJgG4RYAAACmQbgFAACAaRBuAQAAYBqEWwAAAJgG4RYAAACmQbgFAACAaRBuAQAAYBqEWwAAAJgG4RYAAACmQbgFAACAaRBuAQAAYBqEWwAAAJgG4RYAAACmQbgFAACAaRBuAQAAYBqEWwAAAJgG4RYAAACmQbgFAACAaTg13G7evFn9+/dXSEiILBaLVqxY4dBvsVgK3F555RX7mLCwsHz906ZNq+ArAQAAQGXg1HCbnZ2tVq1aac6cOQX2nzp1ymGbP3++LBaLoqOjHcZNnTrVYdy4ceMqonwAAABUMq7OPHlUVJSioqIK7Q8KCnLY/+STT9S9e3fdcsstDu1eXl75xgIAAODPp8qsuU1LS9Pnn3+uuLi4fH3Tpk1T7dq11aZNG73yyiu6fPlykXPl5OTIZrM5bAAAAKj6nHrntiQWLlwoLy8v3X///Q7tjz76qNq2bSs/Pz9t3bpViYmJOnXqlGbMmFHoXElJSZoyZUp5lwwAAIAKVmXC7fz58zVkyBB5eHg4tE+YMMH+dcuWLeXu7q6HHnpISUlJslqtBc6VmJjocJzNZlNoaGj5FA4AAIAKUyXC7ZYtW3Tw4EF98MEH1x3bsWNHXb58WceOHVOjRo0KHGO1WgsNvgAAAKi6qsSa23feeUft2rVTq1atrjt2z549cnFxUUBAQAVUBgAAgMrEqXdus7KydPjwYfv+0aNHtWfPHvn5+enmm2+WdHXJwLJly/Tqq6/mOz4lJUXbt29X9+7d5eXlpZSUFCUkJGjo0KGqVatWhV0HAAAAKgenhtudO3eqe/fu9v1r62BjYmK0YMECSdKSJUtkGIYGDx6c73ir1aolS5Zo8uTJysnJUXh4uBISEhzW0wIAAODPw2IYhuHsIpzNZrPJx8dHmZmZ8vb2dnY5VUbY0587uwT8SRyb1s/ZJQAAnKy4ea1KrLkFAAAAioNwCwAAANMg3AIAAMA0CLcAAAAwDcItAAAATINwCwAAANMg3AIAAMA0CLcAAAAwDcItAAAATINwCwAAANMg3AIAAMA0CLcAAAAwDcItAAAATINwCwAAANMg3AIAAMA0CLcAAAAwDcItAAAATINwCwAAANMg3AIAAMA0CLcAAAAwDcItAAAATINwCwAAANMg3AIAAMA0CLcAAAAwDcItAAAATINwCwAAANMg3AIAAMA0CLcAAAAwDcItAAAATINwCwAAANMg3AIAAMA0CLcAAAAwDcItAAAATINwCwAAANMg3AIAAMA0CLcAAAAwDcItAAAATINwCwAAANMg3AIAAMA0CLcAAAAwDcItAAAATINwCwAAANNwarjdvHmz+vfvr5CQEFksFq1YscKhPzY2VhaLxWHr06ePw5gzZ85oyJAh8vb2lq+vr+Li4pSVlVWBVwEAAIDKwqnhNjs7W61atdKcOXMKHdOnTx+dOnXKvv373/926B8yZIi+//57rV27VitXrtTmzZs1evTo8i4dAAAAlZCrM08eFRWlqKioIsdYrVYFBQUV2Pfjjz9q9erV2rFjh9q3by9Jev3119W3b19Nnz5dISEhZV4zAAAAKq9Kv+b2yy+/VEBAgBo1aqQxY8bot99+s/elpKTI19fXHmwlqVevXnJxcdH27dsLnTMnJ0c2m81hAwAAQNVXqcNtnz59tGjRIq1fv17/+Mc/tGnTJkVFRenKlSuSpNTUVAUEBDgc4+rqKj8/P6WmphY6b1JSknx8fOxbaGhouV4HAAAAKoZTlyVcz6BBg+xft2jRQi1btlT9+vX15ZdfqmfPnqWeNzExURMmTLDv22w2Ai4AAIAJVOo7t390yy23qE6dOjp8+LAkKSgoSOnp6Q5jLl++rDNnzhS6Tle6uo7X29vbYQMAAEDVV6XC7f/+9z/99ttvCg4OliR17txZGRkZ2rVrl33Mhg0blJeXp44dOzqrTAAAADiJU5clZGVl2e/CStLRo0e1Z88e+fn5yc/PT1OmTFF0dLSCgoJ05MgRPfnkk7r11lsVGRkpSWrSpIn69OmjUaNGad68ecrNzdXYsWM1aNAgnpQAAADwJ+TUO7c7d+5UmzZt1KZNG0nShAkT1KZNGz333HOqVq2a9u3bp3vuuUcNGzZUXFyc2rVrpy1btshqtdrneP/999W4cWP17NlTffv21R133KG33nrLWZcEAAAAJ3Lqndtu3brJMIxC+9esWXPdOfz8/LR48eKyLAsAAABVVJVacwsAAAAUhXALAAAA0yDcAgAAwDQItwAAADANwi0AAABMg3ALAAAA0yDcAgAAwDQItwAAADANwi0AAABMg3ALAAAA0yDcAgAAwDQItwAAADANwi0AAABMg3ALAAAA0yDcAgAAwDQItwAAADANwi0AAABMg3ALAAAA0yDcAgAAwDQItwAAADANwi0AAABMg3ALAAAA0yDcAgAAwDQItwAAADANwi0AAABMg3ALAAAA0yDcAgAAwDQItwAAADANwi0AAABMg3ALAAAA0yDcAgAAwDQItwAAADANwi0AAABMg3ALAAAA0yDcAgAAwDQItwAAADANwi0AAABMg3ALAAAA0yDcAgAAwDQItwAAADANwi0AAABMg3ALAAAA03BquN28ebP69++vkJAQWSwWrVixwt6Xm5urp556Si1atFCNGjUUEhKi//u//9PJkycd5ggLC5PFYnHYpk2bVsFXAgAAgMrAqeE2OztbrVq10pw5c/L1nT9/Xrt379azzz6r3bt366OPPtLBgwd1zz335Bs7depUnTp1yr6NGzeuIsoHAABAJePqzJNHRUUpKiqqwD4fHx+tXbvWoe2NN97QbbfdpuPHj+vmm2+2t3t5eSkoKKhcawUAAEDlV6XW3GZmZspiscjX19ehfdq0aapdu7batGmjV155RZcvXy5ynpycHNlsNocNAAAAVZ9T79yWxMWLF/XUU09p8ODB8vb2trc/+uijatu2rfz8/LR161YlJibq1KlTmjFjRqFzJSUlacqUKRVRNgAAACpQlQi3ubm5+stf/iLDMDR37lyHvgkTJti/btmypdzd3fXQQw8pKSlJVqu1wPkSExMdjrPZbAoNDS2f4gEAAFBhKn24vRZsf/75Z23YsMHhrm1BOnbsqMuXL+vYsWNq1KhRgWOsVmuhwRcAAABVV6UOt9eC7aFDh7Rx40bVrl37usfs2bNHLi4uCggIqIAKAQAAUJk4NdxmZWXp8OHD9v2jR49qz5498vPzU3BwsAYOHKjdu3dr5cqVunLlilJTUyVJfn5+cnd3V0pKirZv367u3bvLy8tLKSkpSkhI0NChQ1WrVi1nXRYAAACcxKnhdufOnerevbt9/9o62JiYGE2ePFmffvqpJKl169YOx23cuFHdunWT1WrVkiVLNHnyZOXk5Cg8PFwJCQkO62kBAADw5+HUcNutWzcZhlFof1F9ktS2bVtt27atrMsCAABAFVWlnnMLAAAAFIVwCwAAANMg3AIAAMA0CLcAAAAwDcItAAAATINwCwAAANMg3AIAAMA0CLcAAAAwDcItAAAATINwCwAAANMoVbi95ZZb9Ntvv+Vrz8jI0C233HLDRQEAAAClUapwe+zYMV25ciVfe05Ojk6cOHHDRQEAAACl4VqSwZ9++qn96zVr1sjHx8e+f+XKFa1fv15hYWFlVhwAAABQEiUKtwMGDJAkWSwWxcTEOPS5ubkpLCxMr776apkVBwAAAJREicJtXl6eJCk8PFw7duxQnTp1yqUoAAAAoDRKFG6vOXr0aFnXAQAAANywUoVbSVq/fr3Wr1+v9PR0+x3da+bPn3/DhQEAAAAlVapwO2XKFE2dOlXt27dXcHCwLBZLWdcFAAAAlFipwu28efO0YMECDRs2rKzrAQAAAEqtVM+5vXTpkrp06VLWtQAAAAA3pFThduTIkVq8eHFZ1wIAAADckFItS7h48aLeeustrVu3Ti1btpSbm5tD/4wZM8qkOAAAAKAkShVu9+3bp9atW0uS9u/f79DHm8sAAADgLKUKtxs3bizrOgAAAIAbVqo1twAAAEBlVKo7t927dy9y+cGGDRtKXRAAAABQWqUKt9fW216Tm5urPXv2aP/+/YqJiSmLugAAAIASK1W4nTlzZoHtkydPVlZW1g0VBAAAAJRWma65HTp0qObPn1+WUwIAAADFVqbhNiUlRR4eHmU5JQAAAFBspVqWcP/99zvsG4ahU6dOaefOnXr22WfLpDAAAACgpEoVbn18fBz2XVxc1KhRI02dOlW9e/cuk8IAAACAkipVuE1OTi7rOgAAAIAbVqpwe82uXbv0448/SpKaNWumNm3alElRAAAAQGmUKtymp6dr0KBB+vLLL+Xr6ytJysjIUPfu3bVkyRL5+/uXZY0AAABAsZTqaQnjxo3TuXPn9P333+vMmTM6c+aM9u/fL5vNpkcffbSsawQAAACKpVR3blevXq1169apSZMm9ramTZtqzpw5vKEMAAAATlOqO7d5eXlyc3PL1+7m5qa8vLwbLgoAAAAojVKF2x49euixxx7TyZMn7W0nTpxQQkKCevbsWWbFAQAAACVRqnD7xhtvyGazKSwsTPXr11f9+vUVHh4um82m119/vaxrBAAAAIqlVGtuQ0NDtXv3bq1bt04HDhyQJDVp0kS9evUq0+IAAACAkijRndsNGzaoadOmstlsslgsuuuuuzRu3DiNGzdOHTp0ULNmzbRly5byqhUAAAAoUonC7axZszRq1Ch5e3vn6/Px8dFDDz2kGTNmFHu+zZs3q3///goJCZHFYtGKFSsc+g3D0HPPPafg4GB5enqqV69eOnTokMOYM2fOaMiQIfL29pavr6/i4uKUlZVVkssCAACASZQo3O7du1d9+vQptL93797atWtXsefLzs5Wq1atNGfOnAL7X375Zb322muaN2+etm/frho1aigyMlIXL160jxkyZIi+//57rV27VitXrtTmzZs1evTo4l8UAAAATKNEa27T0tIKfASYfTJXV50+fbrY80VFRSkqKqrAPsMwNGvWLE2cOFH33nuvJGnRokUKDAzUihUrNGjQIP34449avXq1duzYofbt20uSXn/9dfXt21fTp09XSEhICa4OAAAAVV2J7tzedNNN2r9/f6H9+/btU3Bw8A0XJUlHjx5Vamqqw5vUfHx81LFjR6WkpEiSUlJS5Ovraw+2ktSrVy+5uLho+/bthc6dk5Mjm83msAEAAKDqK1G47du3r5599lmHZQHXXLhwQZMmTdLdd99dJoWlpqZKkgIDAx3aAwMD7X2pqakKCAhw6Hd1dZWfn599TEGSkpLk4+Nj30JDQ8ukZgAAADhXiZYlTJw4UR999JEaNmyosWPHqlGjRpKkAwcOaM6cObpy5YqeeeaZcim0LCUmJmrChAn2fZvNRsAFAAAwgRKF28DAQG3dulVjxoxRYmKiDMOQJFksFkVGRmrOnDn57rSWVlBQkKSr63x/v9QhLS1NrVu3to9JT093OO7y5cs6c+aM/fiCWK1WWa3WMqkTAAAAlUeJ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/73yem2OHTumEydO5HvDIgAncPaiXwDmdfHiRePpp5822rZta/j4+BjVq1c3GjVqZEycONE4f/68fZzNZjPGjRtnhISEGG5ubkZoaKgxZMgQ4/jx48bGjRsNV1dXY8uWLfbxR48eNby9vY0333yz0HN///33hqenp5GRkeHQvnTpUqNhw4aGu7u70axZM+Pzzz8v+wv/neTkZMPHx6fQ/p9++sm47777DF9fX8PT09No3LixMX78eCMvL88wjILfmFWvXj1j5syZDm2SjI8//tgwjKuve2xsrOHj42P4+voaY8aMMZ5++mmjVatW9vG/f9OUYRhGXl6eMWvWLKNRo0aGm5ub4e/vb0RGRhqbNm1yOO+kSZOKvF5J+bZ69eoVecyN+P0bygryxzeUlddr89JLLxmRkZHlcIUASspiGIbhvGgNAOXngQceUNu2bZWYmOjsUqq88+fPq3bt2lq1apW6devm7HIqlUuXLqlBgwZavHixw4eGAHAOnnMLwLReeeWV675ZCcWzceNG9ejRg2BbgOPHj+vvf/87wRaoJLhzCwAAANPgzi0AAABMg3ALAAAA0yDcAgAAwDQItwAAADANwi0AAABMg3ALAAAA0yDcAgAAwDQItwAAADANwi0AAABMg3ALAAAA0/h/+0GY+dJjM/gAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(8, 6))\n",
        "df['age'].hist(bins=20,  alpha=0.7)\n",
        "plt.title('Histogram of Age')\n",
        "plt.xlabel('Age')\n",
        "plt.ylabel('Frequency')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "LfpxwjVVTafr",
        "outputId": "2ca123c6-9d71-4009-d44d-9a97a7c537b6"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sex_counts = df['sex'].value_counts()\n",
        "plt.figure(figsize=(8, 8))\n",
        "plt.pie(sex_counts, labels=['Male', 'Female'], autopct='%1.1f%%')\n",
        "plt.title('Pie Chart of Sex Distribution')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 675
        },
        "id": "G6_NFY8mUq9B",
        "outputId": "dc715141-601c-487f-a65a-656d248b7566"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}
